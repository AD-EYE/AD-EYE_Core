<launch>

    <group ns="safetyChannelPerception">

        <arg name="points_node" value="/points_raw"/><!--CHANGE THIS TO READ WHETHER FROM VSCAN OR POINTS_RAW -->
        <arg name="remove_ground" value="true"/>
        <arg name="downsample_cloud" value="true"/> <!-- Apply VoxelGrid Filter with the value given by "leaf_size"-->
        <arg name="leaf_size" value="0.5"/><!-- Voxel Grid Filter leaf size-->
        <arg name="remove_points_upto" value="0.1"/>
        <arg name="cluster_size_min" value="7"/><!-- Minimum number of points to consider a cluster as valid-->
        <arg name="cluster_size_max" value="10000"/><!-- Maximum number of points to allow inside a cluster-->
        <arg name="use_diffnormals" value="false"/>
        <arg name="pose_estimation" value="true"/>
        <arg name="clip_min_height" value="-0.5"/>
        <arg name="clip_max_height" value="2.5"/>

        <arg name="keep_lanes" value="false"/>
        <arg name="keep_lane_left_distance" value="5"/>
        <arg name="keep_lane_right_distance" value="5"/>
        <arg name="max_boundingbox_side" value="20"/>
        <arg name="cluster_merge_threshold" value="0.7"/>
        <arg name="clustering_distance" value="1.0"/>
        <arg name="output_frame" value="velodyne"/>
        <arg name="use_gpu" value="true"/>


        <node pkg="lidar_euclidean_cluster_detect" type="lidar_euclidean_cluster_detect"
            name="lidar_euclidean_cluster_detect" output="screen">
            <param name="points_node"
                value="$(arg points_node)"/> <!-- Can be used to select which pointcloud node will be used as input for the clustering -->
            <param name="remove_ground" value="$(arg remove_ground)"/>
            <param name="downsample_cloud" value="$(arg downsample_cloud)"/>
            <param name="leaf_size" value="$(arg leaf_size)"/>
            <param name="cluster_size_min" value="$(arg cluster_size_min)"/>
            <param name="cluster_size_max" value="$(arg cluster_size_max)"/>
            <param name="use_diffnormals" value="$(arg use_diffnormals)"/>
            <param name="pose_estimation" value="$(arg pose_estimation)"/>
            <param name="keep_lanes" value="$(arg keep_lanes)"/>
            <param name="keep_lane_left_distance" value="$(arg keep_lane_left_distance)"/>
            <param name="keep_lane_right_distance" value="$(arg keep_lane_right_distance)"/>
            <param name="max_boundingbox_side" value="$(arg max_boundingbox_side)"/>
            <param name="clip_min_height" value="$(arg clip_min_height)"/>
            <param name="clip_max_height" value="$(arg clip_max_height)"/>
            <param name="output_frame" value="$(arg output_frame)"/>
            <param name="remove_points_upto" value="$(arg remove_points_upto)"/>
            <param name="clustering_distance" value="$(arg clustering_distance)"/>
            <param name="cluster_merge_threshold" value="$(arg cluster_merge_threshold)"/>
            <param name="use_gpu" value="$(arg use_gpu)"/>
            <param name="use_multiple_thres" value="false"/>
            <param name="clustering_ranges" value="[15,30,45,60]"/><!-- Distances to segment pointcloud -->
            <remap from="/detection/lidar_detector/cloud_clusters" to="/safetyChannelPerception/detection/lidar_detector/cloud_clusters"/>
        </node>            
        
        <node pkg="adeye"
            type="safetyChannelPerception"
            name="safetyChannelPerception"
            output="screen"
            launch-prefix="xterm -e"/>

    </group>
</launch>