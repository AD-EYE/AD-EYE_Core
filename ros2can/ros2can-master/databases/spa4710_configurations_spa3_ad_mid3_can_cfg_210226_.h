/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2018-2019 Erik Moqvist
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file was generated by cantools version 38.0.2 Thu Apr 20 10:43:25 2023.
 */

#ifndef SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__H
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

#ifndef EINVAL
#    define EINVAL 22
#endif

/* Frame ids. */
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR1_FRAME_ID (0x580u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR2_FRAME_ID (0x581u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR3_FRAME_ID (0x582u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR4_FRAME_ID (0x583u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR5_FRAME_ID (0x584u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_FRAME_ID (0x106u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR02_FRAME_ID (0x37u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_FRAME_ID (0x63u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_FRAME_ID (0x34u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_NM_FR_FRAME_ID (0x507u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR1_FRAME_ID (0x585u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR2_FRAME_ID (0x586u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR3_FRAME_ID (0x587u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR4_FRAME_ID (0x588u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR5_FRAME_ID (0x589u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_FRAME_ID (0x30u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_FRAME_ID (0x40u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_FRAME_ID (0x55u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRAME_ID (0x62u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_FRAME_ID (0x99u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR06_FRAME_ID (0x380u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_FRAME_ID (0x39u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_FRAME_ID (0x49u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_FRAME_ID (0x130u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_FRAME_ID (0x131u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_FRAME_ID (0x35u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_FRAME_ID (0x115u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_FRAME_ID (0x460u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FRAME_ID (0x43cu)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_FRAME_ID (0x200u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_FRAME_ID (0x180u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_FRAME_ID (0x77u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_FRAME_ID (0x68u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_FRAME_ID (0x58u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_FRAME_ID (0x59u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_FRAME_ID (0x85u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_FRAME_ID (0x160u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_FRAME_ID (0x78u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_FRAME_ID (0x187u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR28_FRAME_ID (0x470u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_FRAME_ID (0x395u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_FRAME_ID (0x53u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_FRAME_ID (0x83u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_FRAME_ID (0x450u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR33_FRAME_ID (0x137u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_FRAME_ID (0x61u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_FRAME_ID (0x444u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_FRAME_ID (0x94u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_NM_FR_FRAME_ID (0x503u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_TO_ALL_FUNC_MID3_DIAG_REQ_FRAME_FRAME_ID (0x7ffu)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_FRAME_ID (0x54u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_FRAME_ID (0x129u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_FRAME_ID (0x128u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_FRAME_ID (0x104u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR05_FRAME_ID (0x23u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR06_FRAME_ID (0x28u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_FRAME_ID (0x2eu)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_FRAME_ID (0x125u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_FRAME_ID (0x87u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_FRAME_ID (0x118u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_FRAME_ID (0x120u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_FRAME_ID (0x443u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_FRAME_ID (0x96u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR14_FRAME_ID (0x56u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR15_FRAME_ID (0x57u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_NM_FR_FRAME_ID (0x508u)

/* Frame lengths in bytes. */
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR1_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR2_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR3_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR4_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR5_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR02_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_NM_FR_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR1_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR2_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR3_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR4_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR5_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR06_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR28_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR33_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_NM_FR_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_TO_ALL_FUNC_MID3_DIAG_REQ_FRAME_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR05_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR06_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR14_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR15_LENGTH (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_NM_FR_LENGTH (8u)

/* Extended or standard frame types. */
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR1_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR2_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR3_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR4_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__ETCVCU1_DEV_SEND_MID3_FR5_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR02_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_NM_FR_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR1_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR2_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR3_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR4_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_DEV_SEND_MID3_FR5_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR06_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR28_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR33_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_NM_FR_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_TO_ALL_FUNC_MID3_DIAG_REQ_FRAME_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR05_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR06_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR14_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR15_IS_EXTENDED (0)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_NM_FR_IS_EXTENDED (0)

/* Frame cycle times in milliseconds. */
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_CYCLE_TIME_MS (45u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR02_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_CYCLE_TIME_MS (40u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_CYCLE_TIME_MS (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_CYCLE_TIME_MS (40u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_CYCLE_TIME_MS (95u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR06_CYCLE_TIME_MS (380u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_CYCLE_TIME_MS (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_CYCLE_TIME_MS (260u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_CYCLE_TIME_MS (260u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_CYCLE_TIME_MS (50u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CYCLE_TIME_MS (1100u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_CYCLE_TIME_MS (800u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_CYCLE_TIME_MS (400u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_CYCLE_TIME_MS (300u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_CYCLE_TIME_MS (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_CYCLE_TIME_MS (45u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_CYCLE_TIME_MS (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_CYCLE_TIME_MS (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_CYCLE_TIME_MS (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_CYCLE_TIME_MS (280u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_CYCLE_TIME_MS (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_CYCLE_TIME_MS (160u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR28_CYCLE_TIME_MS (1100u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CYCLE_TIME_MS (440u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_CYCLE_TIME_MS (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_CYCLE_TIME_MS (30u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_CYCLE_TIME_MS (920u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR33_CYCLE_TIME_MS (275u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_CYCLE_TIME_MS (45u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_CYCLE_TIME_MS (840u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_CYCLE_TIME_MS (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_CYCLE_TIME_MS (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_CYCLE_TIME_MS (260u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_CYCLE_TIME_MS (260u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_CYCLE_TIME_MS (45u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR05_CYCLE_TIME_MS (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR06_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_CYCLE_TIME_MS (200u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_CYCLE_TIME_MS (30u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_CYCLE_TIME_MS (60u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_CYCLE_TIME_MS (80u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_CYCLE_TIME_MS (840u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_CYCLE_TIME_MS (80u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR14_CYCLE_TIME_MS (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR15_CYCLE_TIME_MS (10u)

/* Signal choices. */
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_VEH_OPER_INTV_VEH_OPER_INTV_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_VEH_OPER_INTV_VEH_OPER_INTV_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_NO_VEH_OPER_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_VEH_OPER_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_MOD_AD_STEER_MOD_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_MOD_AD_STEER_MOD_ON_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_MOD_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_MOD_AD_STEER_MOD_UNKNOWN_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL4_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL3_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL1_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_STS_AD_STEER_STS_SYS_OK_CHOICE (4u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL7_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL8_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL9_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL10_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL11_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL12_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL13_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL14_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL15_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL16_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL17_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL18_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL19_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR01_AD_SEC_STEER_STS_SAFE_GROUP_BY_GATEWY_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL20_CHOICE (20u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR02_PRIM_SAFE_STOP_ACTV1_PLATFORM_SAFE_STOP_ACTV_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR02_PRIM_SAFE_STOP_ACTV1_PLATFORM_SAFE_STOP_ACTV_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_MOV_DIR1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_MOV_DIR1_STANDSTILL_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_MOV_DIR1_NOT_STANDSTILL_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_MOV_DIR1_FWD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_MOV_DIR1_RVS_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_MOV_DIR1_ERR_CHOICE (5u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MIN_MAX_QF_SAFE_QF_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MIN_MAX_QF_SAFE_QF_NO_INTGRTY_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MIN_MAX_QF_SAFE_QF_INTGRTY_CMPRMD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MIN_MAX_QF_SAFE_QF_DATA_INTGRTY_OK_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_QF_SAFE_QF_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_QF_SAFE_QF_NO_INTGRTY_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_QF_SAFE_QF_INTGRTY_CMPRMD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_MOV_DIR_QF_SAFE_QF_DATA_INTGRTY_OK_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_NOM_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_NOM_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_NOM_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR07_PRIM_VEH_SPD_GROUP_SAFE_NOM_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_MIN_MAX_QF_SAFE_QF_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_MIN_MAX_QF_SAFE_QF_NO_INTGRTY_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_MIN_MAX_QF_SAFE_QF_INTGRTY_CMPRMD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_MIN_MAX_QF_SAFE_QF_DATA_INTGRTY_OK_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_NOM_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_NOM_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_NOM_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__SSM_MID3_CAN_FR11_PRIM_A_LGT_DATA_RAW_SAFE_NOM_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL7_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL8_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL9_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL10_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL11_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL12_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL13_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL14_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL15_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL16_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL17_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL18_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL19_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_PERF_AD_STEER_PERF_PERF_LVL20_CHOICE (20u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL4_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL3_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_STS_AD_STEER_STS_DEGRADED_LVL1_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_AD_PRIM_STEER_STS_SAFE_GROUP_AD_STEER_STS_AD_STEER_STS_SYS_OK_CHOICE (4u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_CAR_MOD_IN_CRASH_STS_SAFE_STS_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR01_CAR_MOD_IN_CRASH_STS_SAFE_STS_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_SWT_STS_IF_ON_OFF_CRIT1_NOT_VLD1_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_SWT_STS_IF_ON_OFF_CRIT1_OFF_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_SWT_STS_IF_ON_OFF_CRIT1_ON_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_SWT_STS_IF_ON_OFF_CRIT1_NOT_VLD2_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_BRK_TQ_MIN_REQ_BRK_ACTR_CTRL_MOD_FOR_MIN_TQ_REQ_BRK_ACTR_CTRL_MOD1_NORM_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_BRK_TQ_MIN_REQ_BRK_ACTR_CTRL_MOD_FOR_MIN_TQ_REQ_BRK_ACTR_CTRL_MOD1_CMFT_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_BRK_TQ_MIN_REQ_BRK_ACTR_CTRL_MOD_FOR_MIN_TQ_REQ_BRK_ACTR_CTRL_MOD1_SFTY_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_BRK_TQ_MIN_REQ_BRK_ACTR_CTRL_MOD_FOR_MIN_TQ_REQ_BRK_ACTR_CTRL_MOD1_VLD_FOR_AD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_ACTV_IF_ON_OFF_CRIT1_NOT_VLD1_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_ACTV_IF_ON_OFF_CRIT1_OFF_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_ACTV_IF_ON_OFF_CRIT1_ON_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR02_HORN_ACTV_IF_ON_OFF_CRIT1_NOT_VLD2_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_AD_SEC_STEER_ACTVN_GROUP_SAFE_AD_STEER_ACTVN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_AD_SEC_STEER_ACTVN_GROUP_SAFE_AD_STEER_ACTVN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_AD_SEC_STEER_ACTVN_GROUP_SAFE_AD_STEER_DE_ACTVN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_AD_SEC_STEER_ACTVN_GROUP_SAFE_AD_STEER_DE_ACTVN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_STEER_WHL_TQ_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_STEER_WHL_TQ_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_STEER_WHL_TQ_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_STEER_WHL_TQ_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_PRPSN_TQ_DIR_ACT_PRPSN_DIR_ACT1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_PRPSN_TQ_DIR_ACT_PRPSN_DIR_ACT1_FWD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_PRPSN_TQ_DIR_ACT_PRPSN_DIR_ACT1_RVS_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR03_PRPSN_TQ_DIR_ACT_PRPSN_DIR_ACT1_ZERO_TORQUE_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_POS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_LO_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_AUT_LI_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_PRPSN_TQ_DIR_CPBY_STS_PRPSN_TQ_DIR_CPBY1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_PRPSN_TQ_DIR_CPBY_STS_PRPSN_TQ_DIR_CPBY1_FULL_FCN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_PRPSN_TQ_DIR_CPBY_STS_PRPSN_TQ_DIR_CPBY1_FWD_ONLY_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_PRPSN_TQ_DIR_CPBY_STS_PRPSN_TQ_DIR_CPBY1_RVS_ONLY_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_PRPSN_TQ_DIR_CPBY_STS_PRPSN_TQ_DIR_CPBY1_NO_FCN_CHOICE (4u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR04_FRIC_ESTIMN_FROM_VEH_DYN_QLY_QLY3_DE7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_UP_TIP_REQ_UP_TIP_REQ1_UP_TIP_REQ_NOT_ACTV_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_UP_TIP_REQ_UP_TIP_REQ1_UP_TIP_REQ_ACTV_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_TIP_REQ_TIP_REQ1_TIP_REQ_NOT_ACTV_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_TIP_REQ_TIP_REQ1_TIP_REQ_ACTV_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_STEER_WHL_UP_REQ_STEER_WHL_UP_REQ_STEER_WHL_UP_REQ_NOT_ACTV_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_STEER_WHL_UP_REQ_STEER_WHL_UP_REQ_STEER_WHL_UP_REQ_ACTV_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_STEER_WHL_DWN_REQ_STEER_WHL_DWN_REQ1_STEER_WHL_DWN_REQ_NOT_ACTV_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_STEER_WHL_DWN_REQ_STEER_WHL_DWN_REQ1_STEER_WHL_DWN_REQ_ACTV_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_DWN_TIP_REQ_DWN_TIP_REQ_DWN_TIP_REQ_NOT_ACTV_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_DRVR_GEAR_SHIFT_MAN_REQ_DWN_TIP_REQ_DWN_TIP_REQ_DWN_TIP_REQ_ACTV_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_ACTR1_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_ACTR1_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_ACTR2_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_ACTR2_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_ACTR3_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_ACTR3_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_RSVD1_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_RSVD1_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_RSVD2_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_RSVD2_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_RSVD3_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_RSVD3_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_SYS_CLNG_FAILR_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_SYS_CLNG_FAILR_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_WSHR_FLD_SNSR_FAILR_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_SNSR_CLNG_ERR_IF_WSHR_FLD_SNSR_FAILR_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIPR_ACTV_IF_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIPR_ACTV_IF_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD0_RPM_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD40_RPM_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD43_RPM_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD46_RPM_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD50_RPM_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD54_RPM_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD57_RPM_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIN_WIPG_AUT_CMD_IF_WIPG_SPD2_WIPG_SPD60_RPM_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_QLY_QLY2_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_QLY_QLY2_NO_INFO_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_QLY_QLY2_VLD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_NOM_TRLR_M_TRLR_M_LVL0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_NOM_TRLR_M_TRLR_M_LVL1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_NOM_TRLR_M_TRLR_M_LVL2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_VEH_M_NOM_TRLR_M_TRLR_M_LVL3_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIPG_FRNT_AUT_MOD_IF_WIPG_AUT_FRNT_MOD_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIPG_FRNT_AUT_MOD_IF_WIPG_AUT_FRNT_MOD_IMDT_MOD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIPG_FRNT_AUT_MOD_IF_WIPG_AUT_FRNT_MOD_INTL_MOD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WIPG_FRNT_AUT_MOD_IF_WIPG_AUT_FRNT_MOD_CONTNS_MOD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WSHNG_CYC_ACTV_IF_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_WSHNG_CYC_ACTV_IF_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_PASS_SEAT_STS_PASS_SEAT_STS1_EMPTY_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_PASS_SEAT_STS_PASS_SEAT_STS1_FMALE_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_PASS_SEAT_STS_PASS_SEAT_STS1_OCCPT_LRG_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_PASS_SEAT_STS_PASS_SEAT_STS1_UKWN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_AD_SEC_BLIND_STOP_MON_ACTVN_GROUP_SAFE_ACTVN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_AD_SEC_BLIND_STOP_MON_ACTVN_GROUP_SAFE_ACTVN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_AD_SEC_BLIND_STOP_MON_ACTVN_GROUP_SAFE_DEACTVN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR05_AD_SEC_BLIND_STOP_MON_ACTVN_GROUP_SAFE_DEACTVN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_ROLL_RATE1_QF1_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_ROLL_RATE1_QF1_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_ROLL_RATE1_QF1_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_ROLL_RATE1_QF1_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_YAW_RATE1_QF1_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_YAW_RATE1_QF1_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_YAW_RATE1_QF1_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_YAW_RATE1_QF1_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_CLSTR_STS1_FOR_AUTNMS_DRV_CLSTR1_STS_STS_AUTNMS_DRV_AD_NOT_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_CLSTR_STS1_FOR_AUTNMS_DRV_CLSTR1_STS_STS_AUTNMS_DRV_DEGRADED1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_CLSTR_STS1_FOR_AUTNMS_DRV_CLSTR1_STS_STS_AUTNMS_DRV_DEGRADED2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR08_CLSTR_STS1_FOR_AUTNMS_DRV_CLSTR1_STS_STS_AUTNMS_DRV_AD_OK_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_STEER_WHL_SNSR_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_STEER_WHL_SNSR_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_STEER_WHL_SNSR_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_STEER_WHL_SNSR_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_WHL_MOT_SYS_CLU_STS_ERAD_CLU_STS1_CLU_OPEN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_WHL_MOT_SYS_CLU_STS_ERAD_CLU_STS1_CLU_CLSD_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_LE_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_LE_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_LE_STS_OK_NOT_OK_NOT_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_LE_STS_OK_NOT_OK_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_RI_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_RI_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_RI_STS_OK_NOT_OK_NOT_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR09_AD_STEER_PADDL_PSD_GROUP_SAFE_RI_STS_OK_NOT_OK_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_UNKWN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_FULL_CLSD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_HALF_CLSD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_OPEND_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_CLS_DIR_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_OPEN_DIR_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_CLS_DIR_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_OPEN_DIR_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_PREPN_FOR_MOVMT_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_POSN_STS_TO_API_DRVR_DOOR_POSN_STS_DOOR_POSN_STS_STOP_MIN_PNT_FOR_CLS_CHOICE (10u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_FRNT_STS_WIPR_FRNT_REQ_IF_NOT_USED_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_FRNT_STS_WIPR_FRNT_REQ_IF_FRNT_WIPR_OFF_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_FRNT_STS_WIPR_FRNT_REQ_IF_FRNT_WIPR_SNG_STK_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_FRNT_STS_WIPR_FRNT_REQ_IF_FRNT_WIPR_INTM_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_FRNT_STS_WIPR_FRNT_REQ_IF_FRNT_WIPR_CONTNS_LO_SPD_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_FRNT_STS_WIPR_FRNT_REQ_IF_FRNT_WIPR_CONTNS_HI_SPD_CHOICE (5u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_RE_STS_WIPR_RE_CMD_IF_RE_WIPER_ROTY_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_RE_STS_WIPR_RE_CMD_IF_RE_WIPR_ROTY_SNG_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_RE_STS_WIPR_RE_CMD_IF_RE_WIPR_ROTY_INTM_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_WIPR_LVR_STS_IF_WIPR_RE_STS_WIPR_RE_CMD_IF_RE_WIPR_ROTY_CONTNS_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_UNKWN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_FULL_CLSD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_HALF_CLSD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_OPEND_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_CLS_DIR_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_OPEN_DIR_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_CLS_DIR_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_OPEN_DIR_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_PREPN_FOR_MOVMT_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_DRVR_RE_POSN_STS_TO_API_DRVR_RE_DOOR_POSN_STS_DOOR_POSN_STS_STOP_MIN_PNT_FOR_CLS_CHOICE (10u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_UNKWN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_FULL_CLSD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_HALF_CLSD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_OPEND_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_CLS_DIR_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_OPEN_DIR_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_CLS_DIR_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_OPEN_DIR_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_PREPN_FOR_MOVMT_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_DOOR_PASS_POSN_STS_TO_API_PASS_DOOR_POSN_STS_DOOR_POSN_STS_STOP_MIN_PNT_FOR_CLS_CHOICE (10u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_MSG_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_ENG_T_HI_TO_SPD_REDN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_ENG_T_HI_TO_STOP_SAFE_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_ENG_T_HI_TO_ENG_STOP_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_ENG_T_HI_TO_MAN_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_COOLT_LVL_LO_TO_ENG_STOP_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_COOLT_LVL_LO_TO_STOP_SAFE_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_COOLT_LVL_LO_TO_MAN_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_COOLT_LVL_LO_TO_LVL_CHK_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR10_ENG_COOLT_INDCN_REQ_FOR_EXT_ENG_COOLT_INDCN_MSG_SRV_RQRD_CHOICE (9u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_UNKWN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_FULL_CLSD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_HALF_CLSD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_OPEND_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_CLS_DIR_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_MOVG_OPEN_DIR_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_CLS_DIR_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_MAN_MOVMT_OPEN_DIR_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_PREPN_FOR_MOVMT_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_POSN_STS_TO_API_PASS_RE_DOOR_POSN_STS_DOOR_POSN_STS_STOP_MIN_PNT_FOR_CLS_CHOICE (10u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_STOP_CMD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_RELS_NOK_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_PITCH_OR_ROLL_AG_OUT_OF_RNG_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_SPD_OUT_OF_LIM_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AMB_T_OUT_OF_RNG_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_BELOW_LIM_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_ABOVE_LIM_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_POSN_RNG_MISSMATCH_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_END_POSN_LIM_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_RVSG_MOVMT_FINSHD_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_CLLSN_SIG_DETD_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_TRAP_SIG_DETD_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_THERMO_PROTN_ACTV_DETD_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_STALL_CDN_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_TI_OUT_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AG_SNSR_FLT_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_HALL_MOT_FLT_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_DRVR_GEN_FAILR_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_LTCH_NOT_RELD_DETD_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_CLU_HNDLG_FAILR_CHOICE (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SYS_ININ_ERR_CHOICE (21u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NET_ERR_CHOICE (22u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_NOT_AVL_CHOICE (23u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_PRM_SET_INVLD_CHOICE (24u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_GEN_MEM_FAILR_CHOICE (25u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_TEST_MOD_ACTV_CHOICE (26u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_CLS_DOOR_CHOICE (27u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_OPEN_DOOR_CHOICE (28u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_USG_MOD_INVLD_CHOICE (29u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_STOP_CMD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_RELS_NOK_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_PITCH_OR_ROLL_AG_OUT_OF_RNG_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_SPD_OUT_OF_LIM_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AMB_T_OUT_OF_RNG_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_BELOW_LIM_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_ABOVE_LIM_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_POSN_RNG_MISSMATCH_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_END_POSN_LIM_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_RVSG_MOVMT_FINSHD_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_CLLSN_SIG_DETD_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_TRAP_SIG_DETD_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_THERMO_PROTN_ACTV_DETD_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_STALL_CDN_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_TI_OUT_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AG_SNSR_FLT_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_HALL_MOT_FLT_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_DRVR_GEN_FAILR_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_LTCH_NOT_RELD_DETD_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_CLU_HNDLG_FAILR_CHOICE (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SYS_ININ_ERR_CHOICE (21u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NET_ERR_CHOICE (22u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_NOT_AVL_CHOICE (23u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_PRM_SET_INVLD_CHOICE (24u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_GEN_MEM_FAILR_CHOICE (25u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_TEST_MOD_ACTV_CHOICE (26u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_CLS_DOOR_CHOICE (27u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_OPEN_DOOR_CHOICE (28u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_USG_MOD_INVLD_CHOICE (29u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_STOP_CMD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_RELS_NOK_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_PITCH_OR_ROLL_AG_OUT_OF_RNG_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_SPD_OUT_OF_LIM_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AMB_T_OUT_OF_RNG_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_BELOW_LIM_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_ABOVE_LIM_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_POSN_RNG_MISSMATCH_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_END_POSN_LIM_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_RVSG_MOVMT_FINSHD_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_CLLSN_SIG_DETD_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_TRAP_SIG_DETD_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_THERMO_PROTN_ACTV_DETD_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_STALL_CDN_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_TI_OUT_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AG_SNSR_FLT_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_HALL_MOT_FLT_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_DRVR_GEN_FAILR_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_LTCH_NOT_RELD_DETD_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_CLU_HNDLG_FAILR_CHOICE (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SYS_ININ_ERR_CHOICE (21u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NET_ERR_CHOICE (22u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_NOT_AVL_CHOICE (23u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_PRM_SET_INVLD_CHOICE (24u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_GEN_MEM_FAILR_CHOICE (25u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_TEST_MOD_ACTV_CHOICE (26u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_CLS_DOOR_CHOICE (27u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_OPEN_DOOR_CHOICE (28u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_DRVR_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_USG_MOD_INVLD_CHOICE (29u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_AHBC_INDCN_TO_API_AHBC_STS1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_AHBC_INDCN_TO_API_AHBC_STS1_ON_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_AHBC_INDCN_TO_API_AHBC_STS1_UNAVAILABLE_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_STOP_CMD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_RELS_NOK_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_PITCH_OR_ROLL_AG_OUT_OF_RNG_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_VEH_SPD_OUT_OF_LIM_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AMB_T_OUT_OF_RNG_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_BELOW_LIM_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SPLY_U_ABOVE_LIM_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_POSN_RNG_MISSMATCH_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_END_POSN_LIM_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_RVSG_MOVMT_FINSHD_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_CLLSN_SIG_DETD_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_ANTI_TRAP_SIG_DETD_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_THERMO_PROTN_ACTV_DETD_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_STALL_CDN_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_TI_OUT_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_AG_SNSR_FLT_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_HALL_MOT_FLT_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_DOOR_MOT_DRVR_GEN_FAILR_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_LTCH_NOT_RELD_DETD_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_CLU_HNDLG_FAILR_CHOICE (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_SYS_ININ_ERR_CHOICE (21u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NET_ERR_CHOICE (22u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_FCT_NOT_AVL_CHOICE (23u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_PRM_SET_INVLD_CHOICE (24u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_GEN_MEM_FAILR_CHOICE (25u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_TEST_MOD_ACTV_CHOICE (26u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_CLS_DOOR_CHOICE (27u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_NOK_TO_OPEN_DOOR_CHOICE (28u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_DOOR_PASS_RE_MOVMT_FAIL_NOTIF_PWR_DOOR_MOVMT_FAIL_NOTIF_USG_MOD_INVLD_CHOICE (29u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_RI_FOR_BLT_LOCK_EQUID_CPT_EQUID_EQUID_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_RI_FOR_BLT_LOCK_EQUID_CPT_EQUID_NOT_EQUID_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_RI_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_UNLOCK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_RI_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_LOCK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_RI_FOR_BLT_LOCK_STS_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_RI_FOR_BLT_LOCK_STS_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_LE_FOR_BLT_LOCK_EQUID_CPT_EQUID_EQUID_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_LE_FOR_BLT_LOCK_EQUID_CPT_EQUID_NOT_EQUID_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_LE_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_UNLOCK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_LE_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_LOCK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_LE_FOR_BLT_LOCK_STS_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_ROW_SEC_LE_FOR_BLT_LOCK_STS_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_PASS_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_UNLOCK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_PASS_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_LOCK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_PASS_FOR_BLT_LOCK_STS_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_PASS_FOR_BLT_LOCK_STS_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_DRVR_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_UNLOCK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_DRVR_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_LOCK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_DRVR_FOR_DEV_ERR_STS2_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR11_BLT_LOCK_ST_AT_DRVR_FOR_DEV_ERR_STS2_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_CLSTR_STS2_FOR_AUTNMS_DRV_CLSTR2_STS_STS_AUTNMS_DRV_AD_NOT_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_CLSTR_STS2_FOR_AUTNMS_DRV_CLSTR2_STS_STS_AUTNMS_DRV_DEGRADED1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_CLSTR_STS2_FOR_AUTNMS_DRV_CLSTR2_STS_STS_AUTNMS_DRV_DEGRADED2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_CLSTR_STS2_FOR_AUTNMS_DRV_CLSTR2_STS_STS_AUTNMS_DRV_AD_OK_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_BRK_PEDL_VAL_BRK_PEDL_VAL_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_BRK_PEDL_VAL_BRK_PEDL_VAL_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_BRK_PEDL_VAL_BRK_PEDL_VAL_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_BRK_PEDL_VAL_BRK_PEDL_VAL_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_EXT_DC_DC_ACTVN_ALLWD_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR12_EXT_DC_DC_ACTVN_ALLWD_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AD_ACTVN_OK_FROM_VEH_DYN_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AD_ACTVN_OK_FROM_VEH_DYN_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_AUTNMS_DRV_MOD_STS1_ACTV_ST_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_AUTNMS_DRV_MOD_STS1_ACTV_ST_ACTV_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_AUTNMS_DRV_MOD_STS1_ACTV_ST_NOT_ACTV_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_AUTNMS_LOW_SPD_MOD_STS1_ACTV_ST_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_AUTNMS_LOW_SPD_MOD_STS1_ACTV_ST_ACTV_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_AUTNMS_LOW_SPD_MOD_STS1_ACTV_ST_NOT_ACTV_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_NO_VEH_OPER_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_AUTNMS_DRV_MOD_MNGT_GLB_SAFE1_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_VEH_OPER_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN1_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN1_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN2_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN2_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN3_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN3_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN4_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN4_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN5_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN5_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN6_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN6_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN7_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN7_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN8_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN8_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN9_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN9_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN10_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN10_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN11_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN11_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN12_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN12_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN13_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN13_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN14_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN14_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN15_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN15_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN16_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN16_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN17_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN17_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN18_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN18_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN19_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN19_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN20_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN20_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN21_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN21_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN22_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN22_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN23_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN23_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN24_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN24_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN25_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN25_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN26_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN26_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN27_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR13_ENG_FLT_INDCN_ENG_FLT_INDCN27_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_DISP1_WD_STS_INDCR_STS1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_DISP1_WD_STS_INDCR_STS1_LE_ON_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_DISP1_WD_STS_INDCR_STS1_RI_ON_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_DISP1_WD_STS_INDCR_STS1_LE_AND_RI_ON_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CNCL_REQ_FOR_CRS_CTRL_CNCL_REQ_CRIT1_NOT_ALLWD1_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CNCL_REQ_FOR_CRS_CTRL_CNCL_REQ_CRIT1_NO_CNCL_REQ_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CNCL_REQ_FOR_CRS_CTRL_CNCL_REQ_CRIT1_CNCL_REQ_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CNCL_REQ_FOR_CRS_CTRL_CNCL_REQ_CRIT1_NOT_ALLWD2_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_SRV_RQRD_FOR_CLLSN_AID_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_SRV_RQRD_FOR_CLLSN_AID_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_THREAT_CLLSN_THREAT1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_THREAT_CLLSN_THREAT1_THREAT_LO_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_THREAT_CLLSN_THREAT1_THREAT_MED_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_THREAT_CLLSN_THREAT1_THREAT_HI_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_STS_SNVTY1_NOT_IN_USE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_STS_SNVTY1_LO_SNVTY_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_STS_SNVTY1_NORM_SNVTY_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_STS_SNVTY1_HI_SNVTY_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF7_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF8_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF9_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF10_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF11_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF12_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF13_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_RESD14_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_AID_SNVTY_SELD_PEN_ID_PEN_PROF_ALL_CHOICE (15u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_FWD_WARN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_CLLSN_FWD_WARN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_TURN_STS1_WD_STS_INDCR_STS1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_TURN_STS1_WD_STS_INDCR_STS1_LE_ON_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_TURN_STS1_WD_STS_INDCR_STS1_RI_ON_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR14_INDCR_TURN_STS1_WD_STS_INDCR_STS1_LE_AND_RI_ON_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_TIRE_RD_ESTIMD_QLY_QLY2_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_TIRE_RD_ESTIMD_QLY_QLY2_NO_INFO_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_TIRE_RD_ESTIMD_QLY_QLY2_VLD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BLT_LOCK_ST_AT_ROW_SEC_MID_FOR_BLT_LOCK_EQUID_CPT_EQUID_EQUID_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BLT_LOCK_ST_AT_ROW_SEC_MID_FOR_BLT_LOCK_EQUID_CPT_EQUID_NOT_EQUID_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BLT_LOCK_ST_AT_ROW_SEC_MID_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_UNLOCK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BLT_LOCK_ST_AT_ROW_SEC_MID_FOR_BLT_LOCK_ST1_BLT_LOCK_ST1_LOCK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BLT_LOCK_ST_AT_ROW_SEC_MID_FOR_BLT_LOCK_STS_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BLT_LOCK_ST_AT_ROW_SEC_MID_FOR_BLT_LOCK_STS_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_SYS_DIR_INDCN_FAILR_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_SYS_DIR_INDCN_FAILR_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_SYS_BRK_LI_FAILR_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_SYS_BRK_LI_FAILR_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BEAM_HI_INDCN_DISP_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_BEAM_HI_INDCN_DISP_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BRK_LI_HI_MNTD_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BRK_LI_HI_MNTD_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BRK_LI_LE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BRK_LI_LE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BRK_LI_RI_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BRK_LI_RI_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_LE_FRNT_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_LE_FRNT_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_LE_RE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_LE_RE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_RI_FRNT_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_RI_FRNT_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_RI_RE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_INDCR_TURN_RI_RE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_LI_POSN_FRNT_LE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_LI_POSN_FRNT_LE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_LI_POSN_FRNT_RI_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_LI_POSN_FRNT_RI_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_FOG_LI_FRNT_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_FOG_LI_FRNT_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_HI_LE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_HI_LE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_HI_RI_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_HI_RI_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_LO_LE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_LO_LE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_LO_RI_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_BEAM_LO_RI_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_POSN_RE_LE_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_POSN_RE_LE_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_POSN_RE_RI_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_POSN_RE_RI_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_PLATE_NR_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_OF_PLATE_NR_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_LI_RVSG_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_FLT_LI_RVSG_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_HDLAMP_SYS_FAILR_DEV_ERR_STS2_NO_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR15_HDLAMP_SYS_FAILR_DEV_ERR_STS2_FLT_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_ENG_OIL_P_WARN_ENG_OIL_P_WARN1_ENG_OIL_P_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_ENG_OIL_P_WARN_ENG_OIL_P_WARN1_ENG_OIL_P_NOT_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_ROAD_LOAD_NOM_COEFF_STS_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_ROAD_LOAD_NOM_COEFF_STS_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN7_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN8_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN9_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN10_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN11_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN12_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN13_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN14_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN15_CHOICE (15u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN16_CHOICE (16u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN17_CHOICE (17u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN18_CHOICE (18u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN19_CHOICE (19u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN20_CHOICE (20u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN21_CHOICE (21u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN22_CHOICE (22u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN23_CHOICE (23u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN24_CHOICE (24u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN25_CHOICE (25u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN26_CHOICE (26u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN27_CHOICE (27u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN28_CHOICE (28u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN29_CHOICE (29u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN30_CHOICE (30u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TRSM_FLT_INDCN_TRSM_FLT_INDCN1_TRSM_FLT_INDCN31_CHOICE (31u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_PRPSN_ERR_INDCN_REQ_MIL_ST_OFF_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_PRPSN_ERR_INDCN_REQ_MIL_ST_ON_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_PRPSN_ERR_INDCN_REQ_MIL_ST_BLINK_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_ASY_SFTY_DECEL_ENAD_BY_VEH_DYN_ASY_SFTY_DECEL_ENAD_BY_VEH_DYN1_ASY_BRKG_NOT_ALLWD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_ASY_SFTY_DECEL_ENAD_BY_VEH_DYN_ASY_SFTY_DECEL_ENAD_BY_VEH_DYN1_ASY_BRKG_ALLWD_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_INHB_OF_ASY_SFTY_DECEL_BY_VEH_DYN_INHB_OF_ASY_SFTY_DECEL_BY_VEH_DYN1_ASY_SFTY_BRKG_NOT_DEND_BY_BRK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_INHB_OF_ASY_SFTY_DECEL_BY_VEH_DYN_INHB_OF_ASY_SFTY_DECEL_BY_VEH_DYN1_ASY_SFTY_BRKG_DEND_BY_BRK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TANK_FLAP_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TANK_FLAP_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR16_TANK_FLAP_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ENG_OIL_LVL_STS_ENG_OIL_LVL_STS1_OIL_LVL_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ENG_OIL_LVL_STS_ENG_OIL_LVL_STS1_OIL_LVL_LO1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ENG_OIL_LVL_STS_ENG_OIL_LVL_STS1_OIL_LVL_LO2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ENG_OIL_LVL_STS_ENG_OIL_LVL_STS1_OIL_LVL_HI_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ENG_OIL_LVL_STS_ENG_OIL_LVL_STS1_OIL_LVL_SRV_RQRD_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ENG_OIL_LVL_STS_ENG_OIL_LVL_STS1_RESD_CHOICE (5u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_SNSR_SOUNDR_BATT_BACKED_FAILR_SNSR_SOUNDR_BATT_BACKED_FAILR_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_SNSR_SOUNDR_BATT_BACKED_FAILR_SNSR_SOUNDR_BATT_BACKED_FAILR_FAILR_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_SNSR_INTR_SCANR_FAILR_SNSR_INTR_SCANR_FAILR_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_SNSR_INTR_SCANR_FAILR_SNSR_INTR_SCANR_FAILR_FAILR_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_SNSR_INCLN_FAILR_SNSR_INCLN_FAILR_NO_FAILR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_SNSR_INCLN_FAILR_SNSR_INCLN_FAILR_FAILR_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_NO_TRIG_SRC_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_SNSR_SOUNDR_BATT_BACKED_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_SNSR_INCLN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_SNSR_INTR_SCANR_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_HOOD_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_TR_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_DOOR_DRVR_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_DOOR_PASS_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_DOOR_RE_LE_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_DOOR_RE_RI_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_TRG_SRC_ALRM_TRG_SRC_VEH_IMOBN_INVLD_CHOICE (10u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_ST_ALRM_ST_DISARMD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_ST_ALRM_ST_ARMD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_ALRM_ST_ALRM_ST_ACTV_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_DRVR_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_DRVR_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_DRVR_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_DRVR_RE_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_DRVR_RE_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_DRVR_RE_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_PASS_RE_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_PASS_RE_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_PASS_RE_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_PASS_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_PASS_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_DOOR_PASS_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_HOOD_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_HOOD_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_HOOD_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_TR_STS_DOOR_STS2_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_TR_STS_DOOR_STS2_OPEND_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_TR_STS_DOOR_STS2_CLSD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_A_LNCH_TI_DLY3_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_A_LNCH_TI_DLY3_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_A_LNCH_TI_DLY3_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR17_A_LNCH_TI_DLY3_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_ACCR_PEDL_PSD_ACCR_PEDL_PSD_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_ACCR_PEDL_PSD_ACCR_PEDL_PSD_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_ACCR_PEDL_PSD_ACCR_PEDL_PSD_STS_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_ACCR_PEDL_PSD_ACCR_PEDL_PSD_STS_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_NOT_PSD_SAFE_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_NOT_PSD_SAFE_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_PSD_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_PSD_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_PSD_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_PSD_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_PSD_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_BRK_PEDL_PSD_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_HV_SYS_ACTV_STS_EXT1_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_HV_SYS_ACTV_STS_EXT1_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_OVRD_DECEL_BY_DRVR_OVRD_DECEL_BY_DRVR_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR18_OVRD_DECEL_BY_DRVR_OVRD_DECEL_BY_DRVR_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_NEUT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR7_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR8_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR9_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR10_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR11_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR12_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_GEAR13_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_UKWN_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_PT_GEAR_ACT_PT_GEAR_ACT1_RVS_CHOICE (15u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TIRE_P_WARN_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TIRE_P_WARN_SOFT_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TIRE_P_WARN_HARD_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TIRE_P_WARN_RESD_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_I_TPMS_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_D_TPMS_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_FRNT_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_FULL_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TIRE_P_WARN_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TIRE_P_WARN_SOFT_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TIRE_P_WARN_HARD_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TIRE_P_WARN_RESD_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_I_TPMS_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_D_TPMS_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_FULL_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TIRE_P_WARN_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TIRE_P_WARN_SOFT_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TIRE_P_WARN_HARD_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TIRE_P_WARN_RESD_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_I_TPMS_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_D_TPMS_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR19_TIRE_P_WARN_RE_RI_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_FULL_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR20_PT_TQ_AT_WHLS_FRNT_QLY_QLY3_DE7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR21_PT_TQ_AT_WHLS_RE_QLY_QLY3_DE7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_AD_SEC_BRK_ACTVN_GROUP_SAFE_ACTVN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_AD_SEC_BRK_ACTVN_GROUP_SAFE_ACTVN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_AD_SEC_BRK_ACTVN_GROUP_SAFE_DEACTVN_REQ_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR22_AD_SEC_BRK_ACTVN_GROUP_SAFE_DEACTVN_REQ_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_NO_SYS_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_I_TPMS_TMP_UNVLB_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_I_TPMS_SYS_FLT_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_D_TPMS_SYS_FLT_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_SYS_FLT_TMP_UNVLB_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_CMN_SYS_FLT_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_MON_SYS_FLT_TIRE_P_MON_SYS_FLT_RESD_CHOICE (6u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_LE_TIRE_P_POSN_TIRE_P_POSN_NO_P_READING_OR_P_READING_OK_WITH_OUT_POSN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_LE_TIRE_P_POSN_TIRE_P_POSN_P_READING_WITH_POSN_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_LE_TIRE_PABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_NORM_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_LE_TIRE_PABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_OLD_VAL_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_LE_TIRE_PABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_UPD_VAL_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_LE_TIRE_PABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_SNSR_FLT_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_RI_TIRE_P_POSN_TIRE_P_POSN_NO_P_READING_OR_P_READING_OK_WITH_OUT_POSN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_RI_TIRE_P_POSN_TIRE_P_POSN_P_READING_WITH_POSN_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_NORM_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_OLD_VAL_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_UPD_VAL_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_FRNT_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_SNSR_FLT_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TIRE_P_WARN_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TIRE_P_WARN_SOFT_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TIRE_P_WARN_HARD_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TIRE_P_WARN_RESD_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_I_TPMS_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_D_TPMS_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_CMN_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_FULL_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_LE_TIRE_P_POSN_TIRE_P_POSN_NO_P_READING_OR_P_READING_OK_WITH_OUT_POSN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_LE_TIRE_P_POSN_TIRE_P_POSN_P_READING_WITH_POSN_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_LE_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_NORM_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_LE_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_OLD_VAL_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_LE_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_UPD_VAL_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_LE_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_SNSR_FLT_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TIRE_P_WARN_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TIRE_P_WARN_SOFT_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TIRE_P_WARN_HARD_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TIRE_P_WARN_RESD_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_NO_WARN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_I_TPMS_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_D_TPMS_WARN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_WARN_FRNT_LE_TIRE_P_WARN_TYPE_TIRE_P_WARN_TYPE_FULL_WARN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_RI_TIRE_P_POSN_TIRE_P_POSN_NO_P_READING_OR_P_READING_OK_WITH_OUT_POSN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_RI_TIRE_P_POSN_TIRE_P_POSN_P_READING_WITH_POSN_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_NORM_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_OLD_VAL_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_UPD_VAL_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR23_TIRE_P_VAL_RE_RI_TIRE_P_ABSLT_VAL_QF_TIRE_P_ABSLT_VAL_QF_SNSR_FLT_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_PRIM_STEER_MOT_TQ_STEER_MOT_TQ_QF_GEN_QF1_UNDEFIND_DATA_ACCUR_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_PRIM_STEER_MOT_TQ_STEER_MOT_TQ_QF_GEN_QF1_TMP_UNDEFD_DATA_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_PRIM_STEER_MOT_TQ_STEER_MOT_TQ_QF_GEN_QF1_DATA_ACCUR_NOT_WITHIN_SPCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR24_PRIM_STEER_MOT_TQ_STEER_MOT_TQ_QF_GEN_QF1_ACCUR_DATA_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_NO_YES_CRIT1_NOT_VLD1_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_NO_YES_CRIT1_NO_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_NO_YES_CRIT1_YES_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_NO_YES_CRIT1_NOT_VLD2_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_PRSNT_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_INTV_STS_DRVR_INTV_BY_STEERING_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_INTV_STS_DRVR_INTV_BY_STEERING_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_INTV_STS_DRVR_INTV_BY_BRK_PEDL_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_INTV_STS_DRVR_INTV_BY_BRK_PEDL_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_INTV_STS_DRVR_INTV_BY_ACCR_PEDL_NO_YES1_NO_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR25_DRVR_INTV_STS_DRVR_INTV_BY_ACCR_PEDL_NO_YES1_YES_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR28_ASY_SFTY_ENA_DECEL_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR28_ASY_SFTY_ENA_DECEL_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGR_HNDL_STS_EXT_ON_BD_CHRGR_HNDL_STS_DISCONNECTED_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGR_HNDL_STS_EXT_ON_BD_CHRGR_HNDL_STS_CONNECTED_WITHOUT_POWER_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGR_HNDL_STS_EXT_ON_BD_CHRGR_HNDL_STS_POWER_AVAILABLE_BUT_NOT_ACTIVATED_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGR_HNDL_STS_EXT_ON_BD_CHRGR_HNDL_STS_CONNECTED_WITH_POWER_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGR_HNDL_STS_EXT_ON_BD_CHRGR_HNDL_STS_INIT_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGR_HNDL_STS_EXT_ON_BD_CHRGR_HNDL_STS_FAULT_CHOICE (5u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_DISCONNECTED_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_AC_CHRGN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_CHA_CHRGN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_CCS_CHRGN_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_GBT_CHRGN_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_THREE_PHA_CHRGN_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_INDU_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR29_CHRGN_TYP_EXT_CHRGN_TYP_INVLD_CHOICE (255u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_USG_ST_EXT_MOD_STS_NO_MOD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_USG_ST_EXT_MOD_STS_INI_MOD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_USG_ST_EXT_MOD_STS_CLIMA_MOD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_USG_ST_EXT_MOD_STS_RADIO_MOD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_USG_ST_EXT_MOD_STS_SRV_MOD_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_USG_ST_EXT_MOD_STS_PRPSN_ACTV_MOD_CHOICE (5u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_MAN_DEACTVN_REQ_IN_PROGS1_VEH_MAN_DEACTVN_REQ_IN_PROGS_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_MAN_DEACTVN_REQ_IN_PROGS1_VEH_MAN_DEACTVN_REQ_IN_PROGS_BGN_STOP_REQ_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_MAN_DEACTVN_REQ_IN_PROGS1_VEH_MAN_DEACTVN_REQ_IN_PROGS_STOP_REQD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_VEH_MAN_DEACTVN_REQ_IN_PROGS1_VEH_MAN_DEACTVN_REQ_IN_PROGS_RESD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_AUTNMS_DRV_MOD_MNGT_EXT_SAFE_AUTNMS_DRV_MOD_STS1_ACTV_ST_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_AUTNMS_DRV_MOD_MNGT_EXT_SAFE_AUTNMS_DRV_MOD_STS1_ACTV_ST_ACTV_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_AUTNMS_DRV_MOD_MNGT_EXT_SAFE_AUTNMS_DRV_MOD_STS1_ACTV_ST_NOT_ACTV_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_AUTNMS_DRV_MOD_MNGT_EXT_SAFE_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_AUTNMS_DRV_MOD_MNGT_EXT_SAFE_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_NO_VEH_OPER_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR30_AUTNMS_DRV_MOD_MNGT_EXT_SAFE_VEH_OPER_MOD_STS1_VEH_OPER_MOD_STS1_VEH_OPER_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_VEH_OP_REQ_IN_VEH_DYN_GROUP_SAFE_VEH_OP_REQ_VEH_OP_REQ_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_VEH_OP_REQ_IN_VEH_DYN_GROUP_SAFE_VEH_OP_REQ_VEH_OP_REQ_REQ_NV_OMOD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR31_VEH_OP_REQ_IN_VEH_DYN_GROUP_SAFE_VEH_OP_REQ_VEH_OP_REQ_REQ_V_OMOD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_CORNR_STFN_CORNR_STFN_QLY_QLY2_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_CORNR_STFN_CORNR_STFN_QLY_QLY2_NO_INFO_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_CORNR_STFN_CORNR_STFN_QLY_QLY2_VLD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_HV_BATT_LIMN_EXT_THERM_WARN_OK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_HV_BATT_LIMN_EXT_THERM_WARN_PRE_WARN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_HV_BATT_LIMN_EXT_THERM_WARN_THERM_WARN_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_LGT_STFN_LGT_STFN_QLY_QLY2_FLT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_LGT_STFN_LGT_STFN_QLY_QLY2_NO_INFO_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR32_LGT_STFN_LGT_STFN_QLY_QLY2_VLD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_INDCR_TYP_EXT1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_INDCR_TYP_EXT1_LE_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_INDCR_TYP_EXT1_RI_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_TO_UPD_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_TO_UPD_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_TO_UPD_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_INDCR_TO_API_INDCR_TYP_EXT_REQ_TO_UPD_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_LI_HZRD_WARN_TO_API_PSD_NOT_PSD_NOT_PSD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_LI_HZRD_WARN_TO_API_PSD_NOT_PSD_PSD_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_BEAM_HI_TO_API_BEAM_HI_FCT_REQ1_NEUT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_BEAM_HI_TO_API_BEAM_HI_FCT_REQ1_FLASH_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_BEAM_HI_TO_API_BEAM_HI_FCT_REQ1_HI_BEAM_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_SWT_BEAM_HI_TO_API_BEAM_HI_FCT_REQ1_LO_BEAM_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_STAND_STILL_MGR_STS_FOR_HLD_SAFE_STAND_STILL_STS_VEH_HLD_STS1_NOT_ACTV_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_STAND_STILL_MGR_STS_FOR_HLD_SAFE_STAND_STILL_STS_VEH_HLD_STS1_SOFT_STOP_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_STAND_STILL_MGR_STS_FOR_HLD_SAFE_STAND_STILL_STS_VEH_HLD_STS1_DRVR_OFF_RELS_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_STAND_STILL_MGR_STS_FOR_HLD_SAFE_STAND_STILL_STS_VEH_HLD_STS1_HLD_ACTV_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR34_STAND_STILL_MGR_STS_FOR_HLD_SAFE_STAND_STILL_STS_VEH_HLD_STS1_RESD_CHOICE (4u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_POS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_LO_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR35_APLID_SWT_EXTR_LI_TO_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_AUT_LI_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_DEGRADED_STS_WHL_LOCK_DEGRADED1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_DEGRADED_STS_WHL_LOCK_DEGRADED1_FULL_FCN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_DEGRADED_STS_WHL_LOCK_DEGRADED1_DEGRADED_FCN_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_DEGRADED_STS_WHL_LOCK_DEGRADED1_NO_FCN_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_LOCK_STS_WHL_LOCK_STS1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_LOCK_STS_WHL_LOCK_STS1_ALL_WHLS_RELD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_LOCK_STS_WHL_LOCK_STS1_FRNT_WHLS_LOCKD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_LOCK_STS_WHL_LOCK_STS1_RE_WHLS_LOCKD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VCU1_MID3_CAN_FR36_WHL_LOCK_STS_LOCK_STS_WHL_LOCK_STS1_ALL_WHLS_LOCKD_CHOICE (4u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SWT_BEAM_HI_FROM_API_BEAM_HI_FCT_REQ1_NEUT_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SWT_BEAM_HI_FROM_API_BEAM_HI_FCT_REQ1_FLASH_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SWT_BEAM_HI_FROM_API_BEAM_HI_FCT_REQ1_HI_BEAM_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SWT_BEAM_HI_FROM_API_BEAM_HI_FCT_REQ1_LO_BEAM_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_HV_SYS_ACTV_REQ_EXT_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_HV_SYS_ACTV_REQ_EXT_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_RE_CMD_IF_WIPR_RE_CMD_IF_RE_WIPER_ROTY_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_RE_CMD_IF_WIPR_RE_CMD_IF_RE_WIPR_ROTY_SNG_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_RE_CMD_IF_WIPR_RE_CMD_IF_RE_WIPR_ROTY_INTM_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_RE_CMD_IF_WIPR_RE_CMD_IF_RE_WIPR_ROTY_CONTNS_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIN_WSHNG_CMD_IF_WIN_WSHNG_CMD_IF_WIN_WSHR_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIN_WSHNG_CMD_IF_WIN_WSHNG_CMD_IF_FRNT_WSHR_CMD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIN_WSHNG_CMD_IF_WIN_WSHNG_CMD_IF_RE_WSHR_CMD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPG_SPD_INTL_IF_WIPG_SPD_INTL_FROM_HMI_POSN7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_RAIN_SNSR_CMD_IF_RAIN_SNSR_CMD1_RAIN_SNSR_BTN_NOT_PUSH_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_RAIN_SNSR_CMD_IF_RAIN_SNSR_CMD1_RAIN_SNSR_BTN_PUSH_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_HORN_ACTVN_REQ_IF_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_HORN_ACTVN_REQ_IF_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG7_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG8_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG9_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG10_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG11_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG12_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG13_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_PROG14_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_CLNG_PROG_CLNG_PROG_ABORT_CLNG_CHOICE (15u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_LIDAR_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_ROOF_MNTD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_SURRNDGS_CAM_FRNT_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_SURRNDGS_CAM_RE_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_SURRNDGS_CAM_SIDE_LE_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_SURRNDGS_CAM_SIDE_RI_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_SURRNDGS_CAM_WIND_SCR1_CHOICE (7u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_SURRNDGS_CAM_WIND_SCR2_CHOICE (8u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD1_CHOICE (9u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD2_CHOICE (10u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD3_CHOICE (11u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD4_CHOICE (12u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD5_CHOICE (13u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD6_CHOICE (14u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_SNSR_CLNG_REQ_IF_SNSR_SELD_SNSR_SELD_RSVD7_CHOICE (15u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_SNG_STK_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_INTM_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_CONTNS_LO_SPD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR01_WIPR_FRNT_REQ_IF_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_LVR_CMD1_FRNT_WIPR_CONTNS_HI_SPD_CHOICE (4u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_CNVINC_API_ENA_CNVINC_API_ENA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_CNVINC_API_ENA_CNVINC_API_ENA_NO_REQ_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_CNVINC_API_ENA_CNVINC_API_ENA_REQ_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_PASS_RE_OK_TO_CLS_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_PASS_RE_OK_TO_CLS_DOOR_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_PASS_OK_TO_CLS_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_PASS_OK_TO_CLS_DOOR_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_DRVR_RE_OK_TO_CLS_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_DRVR_RE_OK_TO_CLS_DOOR_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_DRVR_OK_TO_CLS_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_CLS_DOOR_OK_TO_CLS_DOOR_DRVR_OK_TO_CLS_DOOR_OK_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_PASS_RE_OK_TO_OPEN_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_PASS_RE_OK_TO_OPEN_DOOR_OK_TO_SLIGHTLY_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_PASS_RE_OK_TO_OPEN_DOOR_OK_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_PASS_OK_TO_OPEN_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_PASS_OK_TO_OPEN_DOOR_OK_TO_SLIGHTLY_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_PASS_OK_TO_OPEN_DOOR_OK_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_DRVR_RE_OK_TO_OPEN_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_DRVR_RE_OK_TO_OPEN_DOOR_OK_TO_SLIGHTLY_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_DRVR_RE_OK_TO_OPEN_DOOR_OK_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_DRVR_OK_TO_OPEN_DOOR_NOK_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_DRVR_OK_TO_OPEN_DOOR_OK_TO_SLIGHTLY_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR02_OK_TO_OPEN_DOOR_OK_TO_OPEN_DOOR_DRVR_OK_TO_OPEN_DOOR_OK_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_CLS_REQ_API_DOOR_CLS_REQ_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_CLS_REQ_API_DOOR_CLS_REQ_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_CLS_REQ_API_DOOR_CLS_REQ_CLOSE_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_CLS_REQ_API_DOOR_CLS_REQ_STOP_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_CLS_REQ_API_DOOR_CLS_REQ_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_CLS_REQ_API_DOOR_CLS_REQ_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_CLS_REQ_API_DOOR_CLS_REQ_CLOSE_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_CLS_REQ_API_DOOR_CLS_REQ_STOP_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_RE_CLS_REQ_API_DOOR_CLS_REQ_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_RE_CLS_REQ_API_DOOR_CLS_REQ_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_RE_CLS_REQ_API_DOOR_CLS_REQ_CLOSE_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_PASS_RE_CLS_REQ_API_DOOR_CLS_REQ_STOP_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_RE_CLS_REQ_API_DOOR_CLS_REQ_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_RE_CLS_REQ_API_DOOR_CLS_REQ_OPEN_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_RE_CLS_REQ_API_DOOR_CLS_REQ_CLOSE_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR03_PWR_DOOR_DRVR_RE_CLS_REQ_API_DOOR_CLS_REQ_STOP_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_UKWN_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_OFF_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_NOT_READY_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_READY_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_ON_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_FLT_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_RSD1_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR04_HMI_AUTNMS_STS_HMI_AUTNMS_STS_HMI_AUTNMS_STS1_RSD2_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR05_EXT_DC_DC_ACTVN_STS2_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR05_EXT_DC_DC_ACTVN_STS2_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR06_EXT_DC_DC_ACTVN_STS_BOOLEAN_FALSE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR06_EXT_DC_DC_ACTVN_STS_BOOLEAN_TRUE_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_AUTNMS_DRV_ST_REQ_AUTNMS_DRV_ST_REQ_ACTV_ST_IDLE_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_AUTNMS_DRV_ST_REQ_AUTNMS_DRV_ST_REQ_ACTV_ST_ACTV_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR07_AUTNMS_DRV_ST_REQ_AUTNMS_DRV_ST_REQ_ACTV_ST_NOT_ACTV_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_VEH_OPER_ST_REQ_VEH_OPER_ST_REQ_VEH_OP_REQ_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_VEH_OPER_ST_REQ_VEH_OPER_ST_REQ_VEH_OP_REQ_REQ_NV_OMOD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR08_VEH_OPER_ST_REQ_VEH_OPER_ST_REQ_VEH_OP_REQ_REQ_V_OMOD_CHOICE (2u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_VEH_USG_ST_REQ_EXT_MOD_STS_NO_MOD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_VEH_USG_ST_REQ_EXT_MOD_STS_INI_MOD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_VEH_USG_ST_REQ_EXT_MOD_STS_CLIMA_MOD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_VEH_USG_ST_REQ_EXT_MOD_STS_RADIO_MOD_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_VEH_USG_ST_REQ_EXT_MOD_STS_SRV_MOD_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_VEH_USG_ST_REQ_EXT_MOD_STS_PRPSN_ACTV_MOD_CHOICE (5u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_DIR_REQ_DIR_REQ_ASY_DES_DIR1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_DIR_REQ_DIR_REQ_ASY_DES_DIR1_FWD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_DIR_REQ_DIR_REQ_ASY_DES_DIR1_RVS_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_DIR_REQ_DIR_REQ_ASY_DES_DIR1_ZERO_TORQUE_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_STAND_STILL_REQ_REQ_NO_REQ_HOLD_RELS1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_STAND_STILL_REQ_REQ_NO_REQ_HOLD_RELS1_HLD_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_STAND_STILL_REQ_REQ_NO_REQ_HOLD_RELS1_RELS_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR09_AD_STAND_STILL_REQ_REQ_NO_REQ_HOLD_RELS1_RESD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_BANKING_CONF_QLY3_DE7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR10_PRIM_ROAD_GRADIENT_FROM_AD_INCLN_CONF_QLY3_DE7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE0_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE1_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE2_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE3_CHOICE (3u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE4_CHOICE (4u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE5_CHOICE (5u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE6_CHOICE (6u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_AD_FUSED_FRIC_ESTIMN_FRIC_ESTIMN_CONF_QLY3_DE7_CHOICE (7u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_AHBC_ACTVN_ADP_ACTR_ACTVN_REQ1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_AHBC_ACTVN_ADP_ACTR_ACTVN_REQ1_REQ_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_HZRD_LI_ACTVN_REQ_ADP_ACTR_ACTVN_REQ1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_HZRD_LI_ACTVN_REQ_ADP_ACTR_ACTVN_REQ1_REQ_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_HZRD_LI_DEACTN_REQ_ADP_ACTR_ACTVN_REQ1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_HZRD_LI_DEACTN_REQ_ADP_ACTR_ACTVN_REQ1_REQ_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_INCR_LI_RI_REQ_ADP_ACTR_ACTVN_REQ1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_INCR_LI_RI_REQ_ADP_ACTR_ACTVN_REQ1_REQ_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_INDCR_LE_REQ_ADP_ACTR_ACTVN_REQ1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_ADP_LI_REQ_FROM_API_INDCR_LE_REQ_ADP_ACTR_ACTVN_REQ1_REQ_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_QF_QF1_DEV_OF_DATA_UNDEFD_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_QF_QF1_DATA_TMP_UNDEFD_AND_EVLN_IN_PROGS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_QF_QF1_DEV_OF_DATA_NOT_WITHIN_RNG_ALLWD_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_QF_QF1_DATA_CALCD_WITH_DEV_DEFD_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_POS_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_LO_CHOICE (2u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR11_SWT_EXTR_LI_FROM_API_LI_EXT_FCT_REQ1_LI_EXT_FCT_REQ1_AUT_LI_CHOICE (3u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_DRVR_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_DRVR_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_DRVR_RE_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_DRVR_RE_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_PASS_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_PASS_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_PASS_RE_ON_OFF1_OFF_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR12_ACTVN_OF_HNDL_DOOR_LI_FROM_API_HNDL_DOOR_LI_PASS_RE_ON_OFF1_ON_CHOICE (1u)

#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_AD_WHL_LOCK_REQ_NO_REQ_APPLY_REL_NO_REQ_APPLY_RELS1_NO_REQ_CHOICE (0u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_AD_WHL_LOCK_REQ_NO_REQ_APPLY_REL_NO_REQ_APPLY_RELS1_APPLY_CHOICE (1u)
#define SPA4710_CONFIGURATIONS_SPA3_AD_MID3_CAN_CFG_210226__VIM_MID3_CAN_FR13_AD_WHL_LOCK_REQ_NO_REQ_APPLY_REL_NO_REQ_APPLY_RELS1_RELS_CHOICE (2u)

/**
 * Signals in message ETCVCU1DevSendMid3Fr1.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_t {
    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte5;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte7;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte4;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte3;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte2;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte0;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte6;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr1_byte1;
};

/**
 * Signals in message ETCVCU1DevSendMid3Fr2.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_t {
    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte6;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte3;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte7;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte1;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte4;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte0;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte2;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr2_byte5;
};

/**
 * Signals in message ETCVCU1DevSendMid3Fr3.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_t {
    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte2;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte5;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte0;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte7;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte3;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte1;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte4;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr3_byte6;
};

/**
 * Signals in message ETCVCU1DevSendMid3Fr4.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_t {
    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte6;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte5;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte4;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte3;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte2;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte0;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte1;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr4_byte7;
};

/**
 * Signals in message ETCVCU1DevSendMid3Fr5.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_t {
    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte0;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte5;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte6;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte4;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte7;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte1;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte3;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_receive_mid3_fr5_byte2;
};

/**
 * Signals in message SSMMid3CanFr01.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_mod_sts_safe_group_by_gatewy_ub;

    /**
     *  Vehicle Operator intervention detected by Steering System
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_intv;

    /**
     *  Vehicle Operator status perceived by Steering System
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_mod_sts1;

    /**
     *  E2E-protection
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_steer_mod_sts_safe_group_by_gatewy_cntr;

    /**
     *  AD mode perceived by Steering System
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_mod_sts_safe_group_by_gatewy_ad_steer_mod;

    /**
     *  E2E-protection
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_steer_mod_sts_safe_group_by_gatewy_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_sts_safe_group_by_gatewy_ub;

    /**
     * This signal group contains information from the steering system.
     * In specifics, the overall performance of the steering system, based on current, voltage, heat and degradation.
     * 
     * This is done by a level of abstraction:
     * 
     * AdSteerSts:
     * DegradedLvl4 = No device available for AD operations
     * DegradedLvl3 = Degradation is present in the only available device
     * DegradedLvl2 = A single device is available for AD operations
     * DegradedLvl1 = A degradation is present in of of the two devices. Full availability.
     * SysOK = Redudant devices available. No degradation.
     * 
     * AdSteerPerf:
     * A scale from 0-100% of motor performance that can be given by the steering system.
     * Measured by current, voltage, heat and the current level of degradation seen in AdSteerSts. E2E-protection
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_steer_sts_safe_group_by_gatewy_cntr;

    /**
     * This signal group contains information from the steering system.
     * In specifics, the overall performance of the steering system, based on current, voltage, heat and degradation.
     * 
     * This is done by a level of abstraction:
     * 
     * AdSteerSts:
     * DegradedLvl4 = No device available for AD operations
     * DegradedLvl3 = Degradation is present in the only available device
     * DegradedLvl2 = A single device is available for AD operations
     * DegradedLvl1 = A degradation is present in of of the two devices. Full availability.
     * SysOK = Redudant devices available. No degradation.
     * 
     * AdSteerPerf:
     * A scale from 0-100% of motor performance that can be given by the steering system.
     * Measured by current, voltage, heat and the current level of degradation seen in AdSteerSts. Status of steering system
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_sts;

    /**
     * This signal group contains information from the steering system.
     * In specifics, the overall performance of the steering system, based on current, voltage, heat and degradation.
     * 
     * This is done by a level of abstraction:
     * 
     * AdSteerSts:
     * DegradedLvl4 = No device available for AD operations
     * DegradedLvl3 = Degradation is present in the only available device
     * DegradedLvl2 = A single device is available for AD operations
     * DegradedLvl1 = A degradation is present in of of the two devices. Full availability.
     * SysOK = Redudant devices available. No degradation.
     * 
     * AdSteerPerf:
     * A scale from 0-100% of motor performance that can be given by the steering system.
     * Measured by current, voltage, heat and the current level of degradation seen in AdSteerSts. Performance of MotorHalf1 + MotorHalf2
     *
     * Range: 0..31 (0..31 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_perf;

    /**
     * This signal group contains information from the steering system.
     * In specifics, the overall performance of the steering system, based on current, voltage, heat and degradation.
     * 
     * This is done by a level of abstraction:
     * 
     * AdSteerSts:
     * DegradedLvl4 = No device available for AD operations
     * DegradedLvl3 = Degradation is present in the only available device
     * DegradedLvl2 = A single device is available for AD operations
     * DegradedLvl1 = A degradation is present in of of the two devices. Full availability.
     * SysOK = Redudant devices available. No degradation.
     * 
     * AdSteerPerf:
     * A scale from 0-100% of motor performance that can be given by the steering system.
     * Measured by current, voltage, heat and the current level of degradation seen in AdSteerSts. E2E-protection
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_steer_sts_safe_group_by_gatewy_chks;
};

/**
 * Signals in message SSMMid3CanFr02.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_safe_stop_actv1_ub;

    /**
     *  Safe stop active
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_safe_stop_actv1_platform_safe_stop_actv;

    /**
     *  E2E counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_safe_stop_actv1_cntr;

    /**
     *  E2E checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_safe_stop_actv1_chks;
};

/**
 * Signals in message SSMMid3CanFr07.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_veh_spd_group_safe_ub;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Actual moving direction
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_veh_spd_group_safe_mov_dir;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_veh_spd_group_safe_cntr;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_veh_spd_group_safe_chks;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Quality factor for Min and Max signals
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_veh_spd_group_safe_min_max_qf;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Maximum vehicle speed over ground
     *
     * Range: 0..8191 (0.0..81.91 m/s)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint16_t prim_veh_spd_group_safe_max;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Quality factor for Actual moving direction
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_veh_spd_group_safe_mov_dir_qf;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Minimum vehicle speed over ground
     *
     * Range: 0..8191 (0.0..81.91 m/s)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint16_t prim_veh_spd_group_safe_min;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Quality factor for Nom signal
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_veh_spd_group_safe_nom_qf;

    /**
     * Vehicle speed over ground and Moving direction (Primary) Nominal vehicle speed over ground
     *
     * Range: 0..8191 (0.0..81.91 m/s)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint16_t prim_veh_spd_group_safe_nom;
};

/**
 * Signals in message SSMMid3CanFr11.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_a_lgt_data_raw_safe_ub;

    /**
     * Longitudinal acceleration estimation (Primary) Quality factor for Min and Max signals
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_a_lgt_data_raw_safe_min_max_qf;

    /**
     * Longitudinal acceleration estimation (Primary) Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_a_lgt_data_raw_safe_cntr;

    /**
     * Longitudinal acceleration estimation (Primary) Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_a_lgt_data_raw_safe_chks;

    /**
     * Longitudinal acceleration estimation (Primary) Maximum longitudinal acceleration
     *
     * Range: 0..32767.000000000003 (-16.384..16.383000000000003 m/s^2)
     * Scale: 0.001
     * Offset: -16.384
     */
    uint16_t prim_a_lgt_data_raw_safe_max;

    /**
     * Longitudinal acceleration estimation (Primary) Minimum longitudinal acceleration
     *
     * Range: 0..32767.000000000003 (-16.384..16.383000000000003 m/s^2)
     * Scale: 0.001
     * Offset: -16.384
     */
    uint16_t prim_a_lgt_data_raw_safe_min;

    /**
     * Longitudinal acceleration estimation (Primary) Quality factor for Nom signal
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_a_lgt_data_raw_safe_nom_qf;

    /**
     * Longitudinal acceleration estimation (Primary) Nominal longitudinal acceleration
     *
     * Range: 0..32767.000000000003 (-16.384..16.383000000000003 m/s^2)
     * Scale: 0.001
     * Offset: -16.384
     */
    uint16_t prim_a_lgt_data_raw_safe_nom;
};

/**
 * Signals in message SsmMid3CanNmFr.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_t {
    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_node_id_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_pni_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_aw_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_cs_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_rmr_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_entrance_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t infotainment_and_hmi_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t body_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t visibility_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t warning_sounds_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t hazard_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_locking_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driverinfo_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driverinfo_poll_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pncgsd_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_global_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_trailer_caravan_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driving_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_pre_climatization_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_charging_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_start_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare1_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare2_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare3_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare4_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnchv_energy_storage_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t vehicle_api_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t brake_ssm;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t diesel_ssm;
};

/**
 * Signals in message VCU1DevSendMid3Fr1.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_t {
    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte4;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte2;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte6;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte5;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte7;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte3;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte1;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr1_byte0;
};

/**
 * Signals in message VCU1DevSendMid3Fr2.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_t {
    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte4;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte1;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte2;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte6;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte3;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte0;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte5;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr2_byte7;
};

/**
 * Signals in message VCU1DevSendMid3Fr3.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_t {
    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte2;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte6;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte4;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte3;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte1;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte5;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte0;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr3_byte7;
};

/**
 * Signals in message VCU1DevSendMid3Fr4.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_t {
    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte2;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte3;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte7;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte6;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte1;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte5;

    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte4;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr4_byte0;
};

/**
 * Signals in message VCU1DevSendMid3Fr5.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_t {
    /**
     *  Byte4
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte4;

    /**
     *  Byte6
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte6;

    /**
     *  Byte1
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte1;

    /**
     *  Byte2
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte2;

    /**
     *  Byte0
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte0;

    /**
     *  Byte5
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte5;

    /**
     *  Byte7
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte7;

    /**
     *  Byte3
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t vcu1_dev_send_mid3_fr5_byte3;
};

/**
 * Signals in message VCU1Mid3CanFr01.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t car_mod_in_crash_sts_safe_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_prim_steer_sts_safe_group_ub;

    /**
     *  Performance of MotorHalf1 + MotorHalf2
     *
     * Range: 0..31 (0..31 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_prim_steer_sts_safe_group_ad_steer_perf;

    /**
     *  Status of steering system
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_prim_steer_sts_safe_group_ad_steer_sts;

    /**
     *  E2E-protection
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_prim_steer_sts_safe_group_cntr;

    /**
     *  E2E-protection
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_prim_steer_sts_safe_group_chks;

    /**
     * Indicates if CarModSts==Crash is TRUE or FALSE with E2E protection. End to end checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t car_mod_in_crash_sts_safe_chks;

    /**
     * Indicates if CarModSts==Crash is TRUE or FALSE with E2E protection. End to End Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t car_mod_in_crash_sts_safe_cntr;

    /**
     * Indicates if CarModSts==Crash is TRUE or FALSE with E2E protection. Car Mode Crash status
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t car_mod_in_crash_sts_safe_sts;
};

/**
 * Signals in message VCU1Mid3CanFr02.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t horn_actv_if_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t horn_swt_sts_if_ub;

    /**
     * Information about the status of the horn switch, triggered/not triggered.
     * 
     * 1 = Off
     * 2 = On
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t horn_swt_sts_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_tq_min_req_ub;

    /**
     * Vehicle brake torque request for autonomous driving Allowed negative brake torque gradient
     *
     * Range: 0..1023 (0.0..511500.0 Nm/s)
     * Scale: 500.0
     * Offset: 0.0
     */
    uint16_t brk_tq_min_req_brk_tq_grdt_neg_min_req;

    /**
     * Vehicle brake torque request for autonomous driving Brake actuator mode for brake torque actuation
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_tq_min_req_brk_actr_ctrl_mod_for_min_tq_req;

    /**
     * Vehicle brake torque request for autonomous driving Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_tq_min_req_brk_tq_min_req_cntr;

    /**
     * Vehicle brake torque request for autonomous driving Allowed positive brake torque gradient
     *
     * Range: 0..1023 (0.0..511500.0 Nm/s)
     * Scale: 500.0
     * Offset: 0.0
     */
    uint16_t brk_tq_min_req_brk_tq_grdt_pos_min_req;

    /**
     * Vehicle brake torque request for autonomous driving Minimum vehicle brake torque request
     *
     * Range: 0..4095 (0.0..16380.0 Nm)
     * Scale: 4.0
     * Offset: 0.0
     */
    uint16_t brk_tq_min_req_brk_tq_min_req;

    /**
     * Vehicle brake torque request for autonomous driving Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_tq_min_req_brk_tq_min_req_chks;

    /**
     * Information whether the horn actuator is activated or not.
     * 
     * 1 = Off
     * 2 = On
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t horn_actv_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wshr_fld_lvl_contns_if_ub;

    /**
     * Used to inform about the fluid level status in the additional tank used by the sensor cleaning system.
     * 
     * 0 = Initial value (not used)
     * 1 = Lowest value (empty reservoir)
     * 31 = Highest value (full reservoir)
     *
     * Range: 0..31 (0.0..31.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t wshr_fld_lvl_contns_if;
};

/**
 * Signals in message VCU1Mid3CanFr03.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t steer_whl_tq_group_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_actvn_group_safe_ub;

    /**
     * AdSteerActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to activate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On
     * 
     * AdSteerDeActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to deactivate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On Request to activate steering system autonomous drive functionality.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_actvn_group_safe_ad_steer_actvn_req;

    /**
     * AdSteerActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to activate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On
     * 
     * AdSteerDeActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to deactivate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On Request to deactivate steering system autonomous drive functionality.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_steer_actvn_group_safe_ad_steer_de_actvn_req;

    /**
     * AdSteerActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to activate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On
     * 
     * AdSteerDeActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to deactivate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On E2E-protection
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_steer_actvn_group_safe_cntr;

    /**
     * AdSteerActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to activate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On
     * 
     * AdSteerDeActvnReq
     * Dimension: 1
     * Initial value: Off
     * Description
     * attribute:
     * Request to deactivate steering system autonomous drive functionality.
     * Value Identifier Description
     * 0 Off Off
     * 1 On On E2E-protection
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_steer_actvn_group_safe_chks;

    /**
     * Torque on steering wheel Quality factor for SteerWhlTq
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t steer_whl_tq_qf;

    /**
     * Torque on steering wheel Torque on steering wheel
     *
     * Range: -7680..7680 (-30.0..30.0 NewtonMeter)
     * Scale: 0.00390625
     * Offset: 0.0
     */
    int16_t steer_whl_tq;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prpsn_tq_dir_ub;

    /**
     *  Propulsion torque actual direction
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prpsn_tq_dir_act;

    /**
     *  Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prpsn_tq_dir_cntr;

    /**
     *  Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prpsn_tq_dir_chks;
};

/**
 * Signals in message VCU1Mid3CanFr04.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_extr_li_to_api_ub;

    /**
     * This signal shows the status of the physical Light Switch Module (LSM) position. Counter
     *
     * Range: 0..3 (0.0..3.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t swt_extr_li_to_api_li_ext_fct_cntr;

    /**
     * This signal shows the status of the physical Light Switch Module (LSM) position. Quality factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_extr_li_to_api_li_ext_fct_qf;

    /**
     * This signal shows the status of the physical Light Switch Module (LSM) position. Data
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_extr_li_to_api_li_ext_fct_req1;

    /**
     * This signal shows the status of the physical Light Switch Module (LSM) position. J1850 CRC
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t swt_extr_li_to_api_li_ext_fct_crc;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prpsn_tq_dir_cpby_ub;

    /**
     * Propulsion torque direction capability Propulsion torque capability
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prpsn_tq_dir_cpby_sts;

    /**
     * Propulsion torque direction capability Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prpsn_tq_dir_cpby_cntr;

    /**
     * Propulsion torque direction capability Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prpsn_tq_dir_cpby_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t fric_estimn_from_veh_dyn_group_ub;

    /**
     * Momentary friction estimate Quality of momentary friction estimate.
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t fric_estimn_from_veh_dyn_qly;

    /**
     * Momentary friction estimate Momentary friction estimate.
     *
     * Range: 0..200 (0.0..2.0 Unitless)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint8_t fric_estimn_from_veh_dyn;
};

/**
 * Signals in message VCU1Mid3CanFr05.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_m_group_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_gear_shift_man_req_ub;

    /**
     * Driver tip request from gear shifter or steering wheel for gear selection. Valid for Shift-By-Wire system. Tip up request
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_gear_shift_man_req_up_tip_req;

    /**
     * Driver tip request from gear shifter or steering wheel for gear selection. Valid for Shift-By-Wire system. Tip request
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_gear_shift_man_req_tip_req;

    /**
     * Driver tip request from gear shifter or steering wheel for gear selection. Valid for Shift-By-Wire system. Paddle up request
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_gear_shift_man_req_steer_whl_up_req;

    /**
     * Driver tip request from gear shifter or steering wheel for gear selection. Valid for Shift-By-Wire system. Paddle down request
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_gear_shift_man_req_steer_whl_dwn_req;

    /**
     * Driver tip request from gear shifter or steering wheel for gear selection. Valid for Shift-By-Wire system. Tip down request
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_gear_shift_man_req_dwn_tip_req;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *  Actuator 1 failure
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_actr1;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *  Actuator 2 failure
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_actr2;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *  Actuator 3 failure
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_actr3;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_rsvd1;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_rsvd2;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_rsvd3;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *  Cleaning system failure
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_sys_clng_failr;

    /**
     * Distributes information regarding a failure related to the sensor cleaning system.
     * Signals are of type Fault/No Fault.
     * 
     * SysClngFailr = Cleaning system general failure
     * Actr1 = Failure related to cleaning actuator #1
     * Actr2 = Failure related to cleaning actuator #2
     * Actr3 = Failure related to cleaning actuator #3
     * WshrFldSnsrFailr = Failure related to the continuous washer fluid level sensor used by the sensor cleaning system.
     * 
     * 
     *  Washer fluid sensor failure
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_err_if_wshr_fld_snsr_failr;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_actv_if_ub;

    /**
     * Information about whether the front wiper is active/not active:
     * 
     * 0 = Off
     * 1 = On
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_actv_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t win_wipg_aut_cmd_if_ub;

    /**
     * Distributes information about wiping speed (in RPM) commanded by the rain sensor in case automatic wiping is activated.
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t win_wipg_aut_cmd_if;

    /**
     * Estimated vehicle mass including trailer. Quality for vehicle mass information
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_m_qly;

    /**
     * Estimated vehicle mass including trailer. Estimated trailer mass
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_m_nom_trlr_m;

    /**
     * Estimated vehicle mass including trailer. Vehicle mass including trailer mass (if connected).
     *
     * Range: 0..10000 (0.0..10000.0 kg)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint16_t veh_m;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipg_frnt_aut_mod_if_ub;

    /**
     * Wiping mode commanded by the rain sensor in case automatic wiping is activated.
     * 
     * WipgAutFrntMod0 = 0,	// Off
     * WipgAutFrntMod1 = 1,	// Direct Mode
     * WipgAutFrntMod2 = 2,	// Interval Mode
     * WipgAutFrntMod3 = 3	// Continous Mode
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipg_frnt_aut_mod_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wshng_cyc_actv_if_ub;

    /**
     * Information regarding the state of front windscreen washing
     * 
     * 0 = Front windscreen washing cycle not active
     * 1 = Front windscreen washing cycle active
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wshng_cyc_actv_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pass_seat_sts_ub;

    /**
     * Occupation status of the front passenger seat.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pass_seat_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_blind_stop_mon_actvn_group_safe_ub;

    /**
     * <17w21.3 mnordstr>: Request from LAC LongControlSafe (SSM) to LAC LongControlSafeRdnt (SSMB) to enter AD Mode. Added without explicit FR-requirements, since those are only mentioning SSM. Communication between SSM and SSMB needs to be defined. This DATA-ELEM handles the request to activate. Request to activate AD-mode in 'SSM' from 'VCU1'.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_blind_stop_mon_actvn_group_safe_actvn_req;

    /**
     * <17w21.3 mnordstr>: Request from LAC LongControlSafe (SSM) to LAC LongControlSafeRdnt (SSMB) to enter AD Mode. Added without explicit FR-requirements, since those are only mentioning SSM. Communication between SSM and SSMB needs to be defined. This DATA-ELEM handles the request to activate. Request to deactivate AD-mode in 'SSM' from 'VCU1'.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_blind_stop_mon_actvn_group_safe_deactvn_req;

    /**
     * <17w21.3 mnordstr>: Request from LAC LongControlSafe (SSM) to LAC LongControlSafeRdnt (SSMB) to enter AD Mode. Added without explicit FR-requirements, since those are only mentioning SSM. Communication between SSM and SSMB needs to be defined. This DATA-ELEM handles the request to activate.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_blind_stop_mon_actvn_group_safe_cntr;

    /**
     * <17w21.3 mnordstr>: Request from LAC LongControlSafe (SSM) to LAC LongControlSafeRdnt (SSMB) to enter AD Mode. Added without explicit FR-requirements, since those are only mentioning SSM. Communication between SSM and SSMB needs to be defined. This DATA-ELEM handles the request to activate.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_blind_stop_mon_actvn_group_safe_chks;
};

/**
 * Signals in message VCU1Mid3CanFr06.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_t {
    /**
     * Presents a tiime value that shall be used by all ECUs to time-stamp diagnsotic trouble codes (DTC) according to the requirements for Global DTC snapshot data.
     *
     * Range: 0..4294967295 (0.0..429496729.5 s)
     * Scale: 0.1
     * Offset: 0.0
     */
    uint32_t car_ti_glb;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t car_ti_glb_ub;
};

/**
 * Signals in message VCU1Mid3CanFr08.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_t {
    /**
     * IMU angular rate data. Roll Rate
     *
     * Range: -24576..24576 (-6.0..6.0 rad/s)
     * Scale: 0.000244140625
     * Offset: 0.0
     */
    int16_t roll_rate1;

    /**
     * IMU angular rate data. Yaw Rate
     *
     * Range: -24576..24576 (-6.0..6.0 rad/s)
     * Scale: 0.000244140625
     * Offset: 0.0
     */
    int16_t yaw_rate1;

    /**
     * IMU angular rate data. Check summa
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ag_data_raw_safe_chks;

    /**
     * IMU angular rate data. Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ag_data_raw_safe_cntr;

    /**
     * IMU angular rate data. Quality factor for Roll Rate
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t roll_rate1_qf1;

    /**
     * IMU angular rate data. Quality Factor for Yaw Rate
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t yaw_rate1_qf1;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ag_data_raw_safe_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t clstr_sts1_for_autnms_drv_ub;

    /**
     * Cluster1 Status.  LV Cluster 1 Status
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t clstr_sts1_for_autnms_drv_clstr1_sts;

    /**
     * Cluster1 Status.  Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t clstr_sts1_for_autnms_drv_clstr1_cnt;

    /**
     * Cluster1 Status.  Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t clstr_sts1_for_autnms_drv_clstr1_chks;
};

/**
 * Signals in message VCU1Mid3CanFr09.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t steer_whl_snsr_ub;

    /**
     * Actual steering wheel angle from the actual centre position of the steering wheel. The signal value is a signed value from zero (at centre steering wheel position) where a left turn (counterclockwise from steering wheel centre position) is represented by positive values and right turn (clockwise from steering wheel centre position) will have negative value.  Actual steering wheel angle from the actual centre position of the steering wheel. The signal value is a signed value from zero (at centre steering wheel position) where a left turn (counterclockwise from steering wheel centre position) is represented by positive values and right turn (clockwise from steering wheel centre position) will have negative value.
     *
     * Range: -14848..14848 (-14.5..14.5 rad)
     * Scale: 0.0009765625
     * Offset: 0.0
     */
    int16_t steer_whl_ag_safe;

    /**
     * Actual steering wheel angle from the actual centre position of the steering wheel. The signal value is a signed value from zero (at centre steering wheel position) where a left turn (counterclockwise from steering wheel centre position) is represented by positive values and right turn (clockwise from steering wheel centre position) will have negative value.  Qf for steering wheel sensor information
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t steer_whl_snsr_qf;

    /**
     * Actual steering wheel angle from the actual centre position of the steering wheel. The signal value is a signed value from zero (at centre steering wheel position) where a left turn (counterclockwise from steering wheel centre position) is represented by positive values and right turn (clockwise from steering wheel centre position) will have negative value.  Steering angle speed with steering wheel rotation direction.  Turning the steering wheel left (counterclockwise) is represented by positive values and turning the steering wheel right (clockwise) is represented by negative values.
     *
     * Range: -6400..6400 (-50.0..50.0 rad/s)
     * Scale: 0.0078125
     * Offset: 0.0
     */
    int16_t steer_whl_ag_spd_safe;

    /**
     * Actual steering wheel angle from the actual centre position of the steering wheel. The signal value is a signed value from zero (at centre steering wheel position) where a left turn (counterclockwise from steering wheel centre position) is represented by positive values and right turn (clockwise from steering wheel centre position) will have negative value.  Checksum for steering wheel sensor data.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t steer_whl_snsr_safe_chks;

    /**
     * Actual steering wheel angle from the actual centre position of the steering wheel. The signal value is a signed value from zero (at centre steering wheel position) where a left turn (counterclockwise from steering wheel centre position) is represented by positive values and right turn (clockwise from steering wheel centre position) will have negative value.  Counter value for steering wheel sensor data.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t steer_whl_snsr_safe_cntr;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t whl_mot_sys_clu_sts_ub;

    /**
     * Desscribing the state of the ERAD clutch. Open or Closed. If state is transitioning between Closed to Open it will report closed until it is verified open.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t whl_mot_sys_clu_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_steer_paddl_psd_group_safe_ub;

    /**
     *  Left paddle pressed
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_steer_paddl_psd_group_safe_le;

    /**
     *  Status flag of left paddle
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_steer_paddl_psd_group_safe_le_sts;

    /**
     *  Right paddle pressed
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_steer_paddl_psd_group_safe_ri;

    /**
     *  Status flag of right paddle
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_steer_paddl_psd_group_safe_ri_sts;

    /**
     *  E2E counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_steer_paddl_psd_group_safe_cntr;

    /**
     *  E2E Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_steer_paddl_psd_group_safe_chks;
};

/**
 * Signals in message VCU1Mid3CanFr10.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_t {
    /**
     *  Position status of the driver door
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_posn_sts_to_api_drvr_door_posn_sts;

    /**
     *  Counter for position status of driver door
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_drvr_posn_sts_to_api_drvr_door_posn_sts_cntr;

    /**
     *  Checksum for position status of driver door
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_drvr_posn_sts_to_api_drvr_door_posn_sts_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_posn_sts_to_api_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_re_posn_sts_to_api_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_posn_sts_to_api_ub;

    /**
     *  Wiper front lever status.
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_lvr_sts_if_wipr_frnt_sts;

    /**
     *  Rear wiper button status.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_lvr_sts_if_wipr_re_sts;

    /**
     *  Position status of the rear driver door
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts;

    /**
     *  Counter for position status of rear driver door
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_cntr;

    /**
     *  Checksum for position status of rear driver door
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_chks;

    /**
     *  Position status of the passenger door
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_posn_sts_to_api_pass_door_posn_sts;

    /**
     *  Counter for position status of passenger door
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_pass_posn_sts_to_api_pass_door_posn_sts_cntr;

    /**
     *  Checksum for position status of passenger door
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_pass_posn_sts_to_api_pass_door_posn_sts_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_lvr_sts_if_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_coolt_indcn_req_for_ext_ub;

    /**
     * Request to display warning / info message to customer in DIM regarding engine cooling system. Possible warning messages:
     * - no message
     * - high engine temp reduce speed
     * - high engine temp stop safely
     * - high engine temp stop engine
     * - high engine temp see manual
     * - coolant low stop engine
     * - coolant low stop safely
     * - coolant low see manual
     * - coolant low check level
     * - coolant system service required
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_coolt_indcn_req_for_ext;
};

/**
 * Signals in message VCU1Mid3CanFr11.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_t {
    /**
     *  Position status of the rear passenger door
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_re_posn_sts_to_api_pass_re_door_posn_sts;

    /**
     *  Counter for position status of rear passenger door
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_cntr;

    /**
     *  Checksum for position status of rear passenger door
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_re_posn_sts_to_api_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_movmt_fail_notif_ub;

    /**
     * Range: 0..63 (0..63 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_movmt_fail_notif;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_re_movmt_fail_notif_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_movmt_fail_notif_ub;

    /**
     * Range: 0..63 (0..63 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_movmt_fail_notif;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ahbc_indcn_to_api_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_re_movmt_fail_notif_ub;

    /**
     * Range: 0..63 (0..63 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_re_movmt_fail_notif;

    /**
     * This signal shows if the AHB system is activated or not.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ahbc_indcn_to_api;

    /**
     * Range: 0..63 (0..63 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_re_movmt_fail_notif;

    /**
     * State of belt lock at seating position at right of second row If the belt lock is equipped
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_ri_for_blt_lock_equid;

    /**
     * State of belt lock at seating position at right of second row Belt lock state,  locked/unlocked
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_ri_for_blt_lock_st1;

    /**
     * State of belt lock at seating position at right of second row Belt lock status, OK/NOK
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_ri_for_blt_lock_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_ri_ub;

    /**
     * State of belt lock at seating position at left of second row If the belt lock is equipped
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_le_for_blt_lock_equid;

    /**
     * State of belt lock at seating position at left of second row Belt lock state,  locked/unlocked
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_le_for_blt_lock_st1;

    /**
     * State of belt lock at seating position at left of second row Belt lock status, OK/NOK
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_le_for_blt_lock_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_le_ub;

    /**
     * State of belt lock at passenger seating position Belt lock state, locked/unlocked
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_pass_for_blt_lock_st1;

    /**
     * State of belt lock at passenger seating position Belt lock status, OK/NOK
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_pass_for_blt_lock_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_pass_ub;

    /**
     * State of belt lock at driver seating position Belt lock state, locked/unlocked
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_drvr_for_blt_lock_st1;

    /**
     * State of belt lock at driver seating position Belt lock status, OK/NOK
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_drvr_for_dev_err_sts2;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_drvr_ub;
};

/**
 * Signals in message VCU1Mid3CanFr12.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_axle_avl_re_max_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t clstr_sts2_for_autnms_drv_ub;

    /**
     * Cluster2 Status. LV Cluster 2 Status
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t clstr_sts2_for_autnms_drv_clstr2_sts;

    /**
     * Cluster2 Status. Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t clstr_sts2_for_autnms_drv_clstr2_cnt;

    /**
     * Cluster2 Status. CheckSum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t clstr_sts2_for_autnms_drv_clstr2_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_pedl_val_ub;

    /**
     * Position of the brake pedal.
     * physical lower limit: no pedal activation
     * physical upper limit: full pedal stroke Brake pedal position
     *
     * Range: 0..25600 (0.0..100.0 %)
     * Scale: 0.00390625
     * Offset: 0.0
     */
    uint16_t brk_pedl_val_brk_pedl_val;

    /**
     * Position of the brake pedal.
     * physical lower limit: no pedal activation
     * physical upper limit: full pedal stroke Brake pedal sensor quality factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_pedl_val_brk_pedl_val_qf;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_axle_avl_frnt_max_ub;

    /**
     * Available propulsion maximum torque at front wheel axle, mean value of right and left wheels. Sign definition: A positive torque will accelerate the vehicle in the driver desired direction.
     *
     * Range: -4096..4095 (-16384.0..16380.0 NewtonMeter)
     * Scale: 4.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_axle_avl_frnt_max;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ext_dc_dc_actvn_allwd_ub;

    /**
     * External DCDCs 2nd (Backup) and 3rd (Redundant) activation and deactivation request to UBER.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ext_dc_dc_actvn_allwd;

    /**
     * Available propulsion maximum torque at rear wheel axle, mean value of right and left wheels. Sign definition: A positive torque will accelerate the vehicle in the driver desired direction.
     *
     * Range: -4096..4095 (-16384.0..16380.0 NewtonMeter)
     * Scale: 4.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_axle_avl_re_max;
};

/**
 * Signals in message VCU1Mid3CanFr13.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_actvn_ok_from_veh_dyn_ub;

    /**
     * <17w16d2 mnordstr>: Related requirement from FR AD:
     * 
     * - AD VDM: Provide vehicle dynamics availability information v4 (url:swap://SystemWeaver:3000/x0400000000ECB82C)
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_actvn_ok_from_veh_dyn;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_axle_avl_re_max_long_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_glb_safe1_ub;

    /**
     * Data element communicates if Autonomous Drive status, Vehicle Operator present and RFAP mode activated or not with E2E protection. If Autonomous Drive is activated or not.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_glb_safe1_autnms_drv_mod_sts1;

    /**
     * Data element communicates if Autonomous Drive status, Vehicle Operator present and RFAP mode activated or not with E2E protection. If automatic parking is activated or not
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_glb_safe1_autnms_low_spd_mod_sts1;

    /**
     * Data element communicates if Autonomous Drive status, Vehicle Operator present and RFAP mode activated or not with E2E protection. Counter used for E2E protection.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t autnms_drv_mod_mngt_glb_safe1_counter;

    /**
     * Data element communicates if Autonomous Drive status, Vehicle Operator present and RFAP mode activated or not with E2E protection. If VehicleOperatorMode is activated or not
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_glb_safe1_veh_oper_mod_sts1;

    /**
     * Data element communicates if Autonomous Drive status, Vehicle Operator present and RFAP mode activated or not with E2E protection. Checksum used for E2E protection.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t autnms_drv_mod_mngt_glb_safe1_checksum;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn1;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn2;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn3;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn4;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn5;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn6;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn7;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn8;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn9;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn10;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn11;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn12;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn13;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn14;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn15;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn16;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn17;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn18;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn19;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn20;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn21;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn22;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn23;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn24;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn25;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn26;

    /**
     * Text messages sent to DIM for Powertrain faults
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_flt_indcn_eng_flt_indcn27;

    /**
     * Maximum propulsive torque capability at rear wheel axle long horizon.
     *
     * Range: -4096..4095 (-16384.0..16380.0 NewtonMeter)
     * Scale: 4.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_axle_avl_re_max_long;
};

/**
 * Signals in message VCU1Mid3CanFr14.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t srv_rqrd_for_cllsn_aid_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t indcr_disp1_wd_sts_ub;

    /**
     * Controls the Direction Indicator tell-tales and sound to the driver.
     * 
     * Signal will be event driven and holds every flank on and off of the telltales/sound.
     * 
     * This signal will not be used for the Hazard Warning Light Button in instrument panel.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t indcr_disp1_wd_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t coolt_t_in_dt_elec_for_ext_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t coolt_flow_in_dt_elec_for_ext_ub;

    /**
     * PredictedCoolant flow for Electric Drivetrain (ED) coolant circuit.
     *
     * Range: 0..1023 (0.0..10.23 L / min)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint16_t coolt_flow_in_dt_elec_for_ext;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cncl_req_for_crs_ctrl_ub;

    /**
     * Request from Active safety actuation manager to immediately cancel ACC or Cruise Control and inhibit activation.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cncl_req_for_crs_ctrl;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_aid_snvty_seld_ub;

    /**
     * 'Service Required' message for all Collision Avoidance functions
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t srv_rqrd_for_cllsn_aid;

    /**
     * Coolant temperature for the Electric Drivetrain (ED) cooling circuit.
     *
     * Range: 0..1800 (-40.0..140.0 degC)
     * Scale: 0.1
     * Offset: -40.0
     */
    uint16_t coolt_t_in_dt_elec_for_ext;

    /**
     * The current collision threat level.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_threat;

    /**
     * 'Distribution of the setting Collision Avoidance Sensitivity Level
     * ' The setting value
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_aid_snvty_seld_sts;

    /**
     * 'Distribution of the setting Collision Avoidance Sensitivity Level
     * ' The profile id associated with the setting value
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_aid_snvty_seld_pen;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_threat_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_fwd_warn_req_ub;

    /**
     * Request to activate collision warning against forward object
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cllsn_fwd_warn_req;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t indcr_turn_sts1_wd_sts_ub;

    /**
     * Provides the state and not the event of HWL/Direction Indicator.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t indcr_turn_sts1_wd_sts;
};

/**
 * Signals in message VCU1Mid3CanFr15.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_rd_estimd_qly_ub;

    /**
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_rd_estimd_qly;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_rd_estimd_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_mid_ub;

    /**
     * State of belt lock at seating position at middle of second row If the belt lock is equipped
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_mid_for_blt_lock_equid;

    /**
     * State of belt lock at seating position at middle of second row Belt lock state,  locked/unlocked
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_mid_for_blt_lock_st1;

    /**
     * State of belt lock at seating position at middle of second row Belt lock status, OK/NOK
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t blt_lock_st_at_row_sec_mid_for_blt_lock_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t sys_dir_indcn_failr_ub;

    /**
     * Indication of Direction Indicator system failure to the driver.
     * 
     * Values:
     * No Fault or Fault.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t sys_dir_indcn_failr;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t sys_brk_li_failr_ub;

    /**
     * Indication of Brake Light system failure to the driver.
     * 
     * Values:
     * No Fault or Fault.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t sys_brk_li_failr;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t beam_hi_indcn_disp_ub;

    /**
     * High Beam Indication.
     * 
     * Controls the High Beam indication (blue tell-tale) to the driver (On/Off).
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t beam_hi_indcn_disp;

    /**
     * Range: 0..513 (0.25..0.50048764 m)
     * Scale: 0.00048828
     * Offset: 0.25
     */
    uint16_t tire_rd_estimd;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_brk_li_hi_mntd_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, CHMSL.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_brk_li_hi_mntd;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_brk_li_le_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, brake light left.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_brk_li_le;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_brk_li_ri_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, brake light right.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_brk_li_ri;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_le_frnt_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, left front direction indicator.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_le_frnt;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_le_re_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, left rear direction indicator.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_le_re;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_ri_frnt_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, right front direction indicator.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_ri_frnt;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_ri_re_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, right rear direction indicator.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_indcr_turn_ri_re;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_li_posn_frnt_le_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, left front position light.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_li_posn_frnt_le;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_li_posn_frnt_ri_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, right front position light.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_li_posn_frnt_ri;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_fog_li_frnt_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, fog light front.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_fog_li_frnt;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_hi_le_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, left high beam.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_hi_le;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_hi_ri_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, right high beam.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_hi_ri;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_lo_le_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, left low beam.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_lo_le;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_lo_ri_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, right low beam.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_beam_lo_ri;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_posn_re_le_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, left rear position light.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_posn_re_le;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_posn_re_ri_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, right rear position light.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_posn_re_ri;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_plate_nr_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, reg plate light.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_of_plate_nr;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_li_rvsg_ub;

    /**
     * Light source failure (open load or short circuit) indication to driver, reversing light.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t flt_li_rvsg;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hdlamp_sys_failr_ub;

    /**
     * Indication of fault in subsystem for swiveling, leveling or low beam LED.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hdlamp_sys_failr;
};

/**
 * Signals in message VCU1Mid3CanFr16.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prpsn_err_indcn_req_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_oil_p_warn_ub;

    /**
     * Request to set low engine oil pressure warning to driver
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_oil_p_warn;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t road_load_nom_ub;

    /**
     * Polynom coefficients for road load estimation Calculated road load avaliable
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t road_load_nom_coeff_sts;

    /**
     * Polynom coefficients for road load estimation f0Nom
     *
     * Range: 0..2047 (0.0..2047.0 N)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint16_t road_load_nom_coeff0;

    /**
     * Polynom coefficients for road load estimation f1Nom
     *
     * Range: -510..511.0000000000000512032770097 (-29.8809..29.939490000000003 Ns/m)
     * Scale: 0.05859
     * Offset: 0.0
     */
    int16_t road_load_nom_coeff1;

    /**
     * Polynom coefficients for road load estimation f2Nom
     *
     * Range: 0..991 (0.0..2.902639 Ns^2/m^2)
     * Scale: 0.002929
     * Offset: 0.0
     */
    uint16_t road_load_nom_coeff2;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t trsm_flt_indcn_ub;

    /**
     * TCM uses signal Transmission Fault Indication to request text message ilumination to driver. Signal is transmitted to both ECM and DIM.
     * 
     * Signal consits of 32 slots. One slot = one unique text message.
     * 
     * Default value = 0 (No request)
     * 
     *
     * Range: 0..31 (0..31 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t trsm_flt_indcn;

    /**
     * MIL signal sent to DIM
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prpsn_err_indcn_req;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t asy_sfty_decel_enad_by_veh_dyn_ub;

    /**
     * Signal indicating that autonomous braking in safety critical situation is allowed by vehicle dynamics.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t asy_sfty_decel_enad_by_veh_dyn;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t inhb_of_asy_sfty_decel_by_veh_dyn_ub;

    /**
     * Signal that aborts an ongoing CMbB intervention and prevents any new interventions this driving cycle.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t inhb_of_asy_sfty_decel_by_veh_dyn;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tank_flap_sts_ub;

    /**
     * TankFlapSts -Tank Flap Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tank_flap_sts;
};

/**
 * Signals in message VCU1Mid3CanFr17.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_t {
    /**
     * Engine oil level status information.
     * If no status currently can be derived 'Not available' will be shown.
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_oil_lvl_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t eng_oil_lvl_sts_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tr_sts_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hood_sts_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t alrm_sts1_ub;

    /**
     * Indicates alarm status, last trigger source and alarm component errors.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_soundr_batt_backed_failr;

    /**
     * Indicates alarm status, last trigger source and alarm component errors.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_intr_scanr_failr;

    /**
     * Indicates alarm status, last trigger source and alarm component errors.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_incln_failr;

    /**
     * Indicates alarm status, last trigger source and alarm component errors.
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t alrm_trg_src;

    /**
     * Indicates alarm status, last trigger source and alarm component errors.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t alrm_st;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_sts_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_re_sts_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_sts_ub;

    /**
     * DoorDrvrSts - Driver Door Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_re_sts_ub;

    /**
     * DoorDrvrReSts - Driver Side Rear Door Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_drvr_re_sts;

    /**
     * DoorPassReSts - Passenger Side Rear Door Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_re_sts;

    /**
     * DoorPassSts - Passenger Door Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t door_pass_sts;

    /**
     * HoodSts - Hood Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hood_sts;

    /**
     * TrSts - Tailgate/Bootlid Status
     * 
     * Ukwn - Unknown status
     * Opend - Opened
     * Clsd - Closed
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tr_sts;

    /**
     * Acceleration Launch Time Delay from Standstill position Quality Factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t a_lnch_ti_dly3_qf;

    /**
     * Acceleration Launch Time Delay from Standstill position Time Delay
     *
     * Range: 0..60 (0.0..6.0 s)
     * Scale: 0.1
     * Offset: 0.0
     */
    uint8_t a_lnch_ti_dly3_sec2;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t a_lnch_ti_dly3_ub;
};

/**
 * Signals in message VCU1Mid3CanFr18.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_t {
    /**
     * Describes if the accelerator pedal is pressed. Will indicate pressed for a small pedal press.
     * Accompanying status signal will indicate the integrity of the information.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t accr_pedl_psd_accr_pedl_psd_chks;

    /**
     * Describes if the accelerator pedal is pressed. Will indicate pressed for a small pedal press.
     * Accompanying status signal will indicate the integrity of the information.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t accr_pedl_psd_accr_pedl_psd_cntr;

    /**
     * Describes if the accelerator pedal is pressed. Will indicate pressed for a small pedal press.
     * Accompanying status signal will indicate the integrity of the information.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t accr_pedl_psd_accr_pedl_psd;

    /**
     * Describes if the accelerator pedal is pressed. Will indicate pressed for a small pedal press.
     * Accompanying status signal will indicate the integrity of the information. AccrPedlPsd fulfills ASIL C integrity
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t accr_pedl_psd_accr_pedl_psd_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t accr_pedl_psd_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_pedl_psd_safe_group_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t asy_sfty_brk_dly_estimd_ub;

    /**
     * Estimated time to achieve 5 m/s^2 deceleration if an intervention request was received.
     *
     * Range: 0..127 (0.0..1.27 s)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint8_t asy_sfty_brk_dly_estimd;

    /**
     * BrkPedlPsd gives the information that the driver presses the brake pedal or not with ASIL B integrity.
     * 0= No, brake pedal is not pressed
     * 1=Yes, brake pedal is pressed
     * 
     * QF for BrkPedlPsd is defined according to below:
     * 0 = Invalid BrkPedlPsd information
     * 1 = Initialization
     * 2 = Providing BrkPedlPsd information with QM integrity
     * 3 = Providing BrkPedlPsd  information with ASIL B integrity
     * 
     * BrkPedlNotPsdSafe information that driver does not press the brake pedal with ASIL C integrity.
     * 0= No, to be considered as undefined state and not be considered as 'brake pedal pressed'.
     * 1= Yes, brake pedal is considered to be not pressed with an integrity of ASIL C. Brake pedal not pressed with ASIL C integrity
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_pedl_not_psd_safe;

    /**
     * BrkPedlPsd gives the information that the driver presses the brake pedal or not with ASIL B integrity.
     * 0= No, brake pedal is not pressed
     * 1=Yes, brake pedal is pressed
     * 
     * QF for BrkPedlPsd is defined according to below:
     * 0 = Invalid BrkPedlPsd information
     * 1 = Initialization
     * 2 = Providing BrkPedlPsd information with QM integrity
     * 3 = Providing BrkPedlPsd  information with ASIL B integrity
     * 
     * BrkPedlNotPsdSafe information that driver does not press the brake pedal with ASIL C integrity.
     * 0= No, to be considered as undefined state and not be considered as 'brake pedal pressed'.
     * 1= Yes, brake pedal is considered to be not pressed with an integrity of ASIL C. Brake pedal pressed with ASIL B integrity
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_pedl_psd;

    /**
     * BrkPedlPsd gives the information that the driver presses the brake pedal or not with ASIL B integrity.
     * 0= No, brake pedal is not pressed
     * 1=Yes, brake pedal is pressed
     * 
     * QF for BrkPedlPsd is defined according to below:
     * 0 = Invalid BrkPedlPsd information
     * 1 = Initialization
     * 2 = Providing BrkPedlPsd information with QM integrity
     * 3 = Providing BrkPedlPsd  information with ASIL B integrity
     * 
     * BrkPedlNotPsdSafe information that driver does not press the brake pedal with ASIL C integrity.
     * 0= No, to be considered as undefined state and not be considered as 'brake pedal pressed'.
     * 1= Yes, brake pedal is considered to be not pressed with an integrity of ASIL C. Qf for brake pedal pressed ASIL B signal
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_pedl_psd_qf;

    /**
     * BrkPedlPsd gives the information that the driver presses the brake pedal or not with ASIL B integrity.
     * 0= No, brake pedal is not pressed
     * 1=Yes, brake pedal is pressed
     * 
     * QF for BrkPedlPsd is defined according to below:
     * 0 = Invalid BrkPedlPsd information
     * 1 = Initialization
     * 2 = Providing BrkPedlPsd information with QM integrity
     * 3 = Providing BrkPedlPsd  information with ASIL B integrity
     * 
     * BrkPedlNotPsdSafe information that driver does not press the brake pedal with ASIL C integrity.
     * 0= No, to be considered as undefined state and not be considered as 'brake pedal pressed'.
     * 1= Yes, brake pedal is considered to be not pressed with an integrity of ASIL C. Counter value for brake pedal pressed information
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_pedl_psd_cntr;

    /**
     * BrkPedlPsd gives the information that the driver presses the brake pedal or not with ASIL B integrity.
     * 0= No, brake pedal is not pressed
     * 1=Yes, brake pedal is pressed
     * 
     * QF for BrkPedlPsd is defined according to below:
     * 0 = Invalid BrkPedlPsd information
     * 1 = Initialization
     * 2 = Providing BrkPedlPsd information with QM integrity
     * 3 = Providing BrkPedlPsd  information with ASIL B integrity
     * 
     * BrkPedlNotPsdSafe information that driver does not press the brake pedal with ASIL C integrity.
     * 0= No, to be considered as undefined state and not be considered as 'brake pedal pressed'.
     * 1= Yes, brake pedal is considered to be not pressed with an integrity of ASIL C. Checksum for brake pedal pressed information
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_pedl_psd_chks;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_sys_actv_sts_ext1_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_sys_actv_sts_ext1;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ovrd_decel_by_drvr_ub;

    /**
     * Reports the driver intent to override a deceleration. Based on Accelerator pedal being distinctively pressed.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ovrd_decel_by_drvr_ovrd_decel_by_drvr;

    /**
     * Reports the driver intent to override a deceleration. Based on Accelerator pedal being distinctively pressed.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ovrd_decel_by_drvr_ovrd_decel_by_drvr_cntr;

    /**
     * Reports the driver intent to override a deceleration. Based on Accelerator pedal being distinctively pressed.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ovrd_decel_by_drvr_ovrd_decel_by_drvr_chks;
};

/**
 * Signals in message VCU1Mid3CanFr19.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t accr_pedl_rat_ub;

    /**
     * Accelerator Pedal Position with adapted 0 point. Value as percentage of fully pressed pedal.
     *
     * Range: 0..25600 (0.0..100.0 %)
     * Scale: 0.00390625
     * Offset: 0.0
     */
    uint16_t accr_pedl_rat;

    /**
     * Driver deceleration request. The signal is generated based on driver requested brake torque (brake pedal applied torque only), vehicle load estimation and road inclination calculations.
     *
     * Range: -128..127.00000000000001 (-12.8..12.700000000000001 m/s^2)
     * Scale: 0.1
     * Offset: 0.0
     */
    int8_t drvr_decel_req;

    /**
     * Setpoint votlage for LV side of External DCDC
     *
     * Range: 0..216 (10.6..16.0 Volt)
     * Scale: 0.025
     * Offset: 10.6
     */
    uint8_t chrgn_u_req_ext;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_decel_req_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_gear_act_ub;

    /**
     * Actual gear.
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_gear_act;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_frnt_ri_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_re_le_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_re_ri_ub;

    /**
     *  Warning level
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_frnt_ri_tire_p_warn;

    /**
     *  Specification of which system raised warning
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_frnt_ri_tire_p_warn_type;

    /**
     *  Warning level
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_re_le_tire_p_warn;

    /**
     *  Specification of which system raised warning
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_re_le_tire_p_warn_type;

    /**
     *  Warning level
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_re_ri_tire_p_warn;

    /**
     *  Specification of which system raised warning
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_re_ri_tire_p_warn_type;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t chrgn_u_req_ext_ub;
};

/**
 * Signals in message VCU1Mid3CanFr20.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_whl_frnt_act_group_ub;

    /**
     * Actual torque delivered by the powertrain to the front axle (torque before propshaft to rear subtracts torque from front).  Quality for estimated front axle and wheel torque
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_whls_frnt_qly;

    /**
     * Actual torque delivered by the powertrain to the front axle (torque before propshaft to rear subtracts torque from front).  Actual torque on front right wheel. Compensated for inertia.
     *
     * Range: -20000..20000 (-20000.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_whl_frnt_ri_act;

    /**
     * Actual torque delivered by the powertrain to the front axle (torque before propshaft to rear subtracts torque from front).  Actual torque on front left wheel. Compensated for inertia.
     *
     * Range: -20000..20000 (-20000.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_whl_frnt_le_act;

    /**
     * Actual torque delivered by the powertrain to the front axle (torque before propshaft to rear subtracts torque from front).  Actual torque on front axle. Not compensated for inertia, exception open converter.
     *
     * Range: -20000..20000 (-20000.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_axle_frnt_act;
};

/**
 * Signals in message VCU1Mid3CanFr21.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_whl_re_act_group_ub;

    /**
     * Actual rear axle torque provided by the powertrain.  Quality for estimated rear axle and wheel torque
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_whls_re_qly;

    /**
     * Actual rear axle torque provided by the powertrain.  Actual torque on rear right wheel. Compensated for inertia.
     *
     * Range: -20000..20000 (-20000.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_whl_re_ri_act;

    /**
     * Actual rear axle torque provided by the powertrain.  Actual torque on rear left wheel. Compensated for inertia.
     *
     * Range: -20000..20000 (-20000.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_whl_re_le_act;

    /**
     * Actual rear axle torque provided by the powertrain.  Actual torque on rear axle. Not compensated for inertia.
     *
     * Range: -20000..20000 (-20000.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_axle_re_act;
};

/**
 * Signals in message VCU1Mid3CanFr22.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pt_tq_at_axle_avl_frnt_max_long_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_fric_tq_tot_at_whls_act_ub;

    /**
     * Total actual friction brake toque at all four wheels. Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_cntr;

    /**
     * Total actual friction brake toque at all four wheels. Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_chks;

    /**
     * Total actual friction brake toque at all four wheels. Total friction brake torque at all four wheels
     *
     * Range: 0..20000 (0.0..20000.0 NewtonMeter)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint16_t brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act;

    /**
     * Maximum propulsive torque capability at front wheel axle long horizon.
     *
     * Range: -4096..4095 (-16384.0..16380.0 NewtonMeter)
     * Scale: 4.0
     * Offset: 0.0
     */
    int16_t pt_tq_at_axle_avl_frnt_max_long;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_brk_actvn_group_safe_ub;

    /**
     * Request to activate and deactivate local AD-mode in Secondary Brake from VDM. Activation of local AD mode in secondary brake system from VDM to BC.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_brk_actvn_group_safe_actvn_req;

    /**
     * Request to activate and deactivate local AD-mode in Secondary Brake from VDM. Deactivation of local AD mode in secondary brake system, from VDM to BC.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_sec_brk_actvn_group_safe_deactvn_req;

    /**
     * Request to activate and deactivate local AD-mode in Secondary Brake from VDM. Counter for E2E.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_brk_actvn_group_safe_cntr;

    /**
     * Request to activate and deactivate local AD-mode in Secondary Brake from VDM. Checksum for E2E.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_sec_brk_actvn_group_safe_chks;
};

/**
 * Signals in message VCU1Mid3CanFr23.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_mon_sys_flt_ub;

    /**
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_mon_sys_flt;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_frnt_le_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_frnt_le_tire_p_posn;

    /**
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_frnt_le_tire_pabslt_val_qf;

    /**
     * Range: 0..255 (0.0..637.5 hPa)
     * Scale: 2.5
     * Offset: 0.0
     */
    uint8_t tire_p_val_frnt_le_tirepabslt_val1;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_re_ri_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_re_le_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_frnt_ri_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_frnt_ri_tire_p_posn;

    /**
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_frnt_ri_tire_p_abslt_val_qf;

    /**
     * Range: 0..255 (0.0..637.5 hPa)
     * Scale: 2.5
     * Offset: 0.0
     */
    uint8_t tire_p_val_frnt_ri_tire_p_abslt_val1;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_cmn_ub;

    /**
     *  Warning level
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_cmn_tire_p_warn;

    /**
     *  Specification of which system raised warning
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_cmn_tire_p_warn_type;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_re_le_tire_p_posn;

    /**
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_re_le_tire_p_abslt_val_qf;

    /**
     * Range: 0..255 (0.0..637.5 hPa)
     * Scale: 2.5
     * Offset: 0.0
     */
    uint8_t tire_p_val_re_le_tire_p_abslt_val1;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_frnt_le_ub;

    /**
     *  Warning level
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_frnt_le_tire_p_warn;

    /**
     *  Specification of which system raised warning
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_warn_frnt_le_tire_p_warn_type;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_re_ri_tire_p_posn;

    /**
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_p_val_re_ri_tire_p_abslt_val_qf;

    /**
     * Range: 0..255 (0.0..637.5 hPa)
     * Scale: 2.5
     * Offset: 0.0
     */
    uint8_t tire_p_val_re_ri_tire_p_abslt_val1;
};

/**
 * Signals in message VCU1Mid3CanFr24.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_t {
    /**
     *  Quality factor for SteerMotTq
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_steer_mot_tq_steer_mot_tq_qf;

    /**
     *  Steering motor torque
     *
     * Range: -7680..7680 (-30.0..30.0 NewtonMeter)
     * Scale: 0.00390625
     * Offset: 0.0
     */
    int16_t prim_steer_mot_tq_steer_mot_tq;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_steer_mot_tq_ub;
};

/**
 * Signals in message VCU1Mid3CanFr25.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_t {
    /**
     * Indicates whether a driver is present or not. Driver Present checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t drvr_prsnt_sts_drvr_prsnt_chks;

    /**
     * Indicates whether a driver is present or not. Driver Present counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t drvr_prsnt_sts_drvr_prsnt_cntr;

    /**
     * Indicates whether a driver is present or not. Driver Present
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_prsnt;

    /**
     * Indicates whether a driver is present or not. Driver Present quality factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_prsnt_qf;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_prsnt_group_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t egy_avl_dcha_tot_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t egy_avl_chrg_tot_ub;

    /**
     * Range: 0..2410 (-500.0..120000.0 Wh)
     * Scale: 50.0
     * Offset: -500.0
     */
    uint16_t egy_avl_chrg_tot;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_intv_sts_ub;

    /**
     * Driver intervention  Driver intervention by steering
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_intv_sts_drvr_intv_by_steering;

    /**
     * Driver intervention  Driver intervention by brake pedal
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_intv_sts_drvr_intv_by_brk_pedl;

    /**
     * Driver intervention  Driver intervention by accelerator pedal
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t drvr_intv_sts_drvr_intv_by_accr_pedl;

    /**
     * Range: 0..2410 (-500.0..120000.0 Wh)
     * Scale: 50.0
     * Offset: -500.0
     */
    uint16_t egy_avl_dcha_tot;
};

/**
 * Signals in message VCU1Mid3CanFr28.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_t {
    /**
     * Active safety request signals for safety decceleration. Request for deceleration in safety critical situation.
     *
     * Range: 0..150 (0.0..15.0 Unitless)
     * Scale: 0.1
     * Offset: 0.0
     */
    uint8_t asy_sfty_decel_req;

    /**
     * Active safety request signals for safety decceleration. Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t sfty_decel_group_safe_chks;

    /**
     * Active safety request signals for safety decceleration. Enable signal for deceleration in safety critical situation.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t asy_sfty_ena_decel;

    /**
     * Active safety request signals for safety decceleration. Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t sfty_decel_group_safe_cntr;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t sfty_decel_group_safe_ub;
};

/**
 * Signals in message VCU1Mid3CanFr29.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t chrgr_hndl_sts_ext_ub;

    /**
     * Status of the Onboard Charger connection to the grid.
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t chrgr_hndl_sts_ext;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t batt_chrgn_ti_estimd_ext_ub;

    /**
     * Estimated charging time left.
     *
     * Range: 0..2047 (0.0..2047.0 Mins)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint16_t batt_chrgn_ti_estimd_ext;

    /**
     * Selected Charging type
     *
     * Range: 0..255 (0..255 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t chrgn_typ_ext;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t chrgn_typ_ext_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t batt_u_ext_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t batt_i_ext_ub;

    /**
     * Hv Battery current. Positive current is discharging the battery.
     *
     * Range: 0..8191 (-410.0..409.1 A)
     * Scale: 0.1
     * Offset: -410.0
     */
    uint16_t batt_i_ext;

    /**
     * Hv Battery Voltage
     *
     * Range: 0..2044 (0.0..511.0 Volt)
     * Scale: 0.25
     * Offset: 0.0
     */
    uint16_t batt_u_ext;
};

/**
 * Signals in message VCU1Mid3CanFr30.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_ext_safe_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_usg_st_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t brk_degraded_ub;

    /**
     * Brake degraded status Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_degraded_cntr;

    /**
     * Brake degraded status Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t brk_degraded_chks;

    /**
     * Brake degraded status Brake degraded status
     *
     * Range: 0..65535 (0.0..65535.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint16_t brk_degraded_sts;

    /**
     * External Vehicle usage mode request answer. Comparable to UsageModes
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_usg_st;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_man_deactvn_req_in_progs1_ub;

    /**
     * If a user action is performed on the start/stop knob/button with the intention to decrease Usage Mode from Driving or Active, the information shall be sent to stakeholders.
     * 0) NoReq, Start/stop device not actuated
     * 1) BgnStopReq, Start/stop device actuated
     * 2) StopReq, A user action that normally would turn off the vehicle has been detected
     * 3) Resd, Reserved
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_man_deactvn_req_in_progs1;

    /**
     * Data element communicates if Autonomous Drive status is activated or not and if Vehicle Operator is present with E2E protection. Checksum used for E2E protection.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t autnms_drv_mod_mngt_ext_safe_checksum;

    /**
     * Data element communicates if Autonomous Drive status is activated or not and if Vehicle Operator is present with E2E protection. Counter used for E2E protection.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t autnms_drv_mod_mngt_ext_safe_counter;

    /**
     * Data element communicates if Autonomous Drive status is activated or not and if Vehicle Operator is present with E2E protection. If Autonomous Drive is activated or not.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_ext_safe_autnms_drv_mod_sts1;

    /**
     * Data element communicates if Autonomous Drive status is activated or not and if Vehicle Operator is present with E2E protection. If VehicleOperatorMode is activated or not
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_mod_mngt_ext_safe_veh_oper_mod_sts1;
};

/**
 * Signals in message VCU1Mid3CanFr31.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t estimd_coast_a_lgt_cpby_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_op_req_in_veh_dyn_group_safe_ub;

    /**
     *  Vehicle Operator request
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_op_req_in_veh_dyn_group_safe_veh_op_req;

    /**
     *  E2E-protection
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t veh_op_req_in_veh_dyn_group_safe_cntr;

    /**
     *  E2E-protection
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t veh_op_req_in_veh_dyn_group_safe_chks;

    /**
     * Range: 0..180 (-3.0..15.0 m/s^2)
     * Scale: 0.1
     * Offset: -3.0
     */
    uint8_t estimd_coast_a_lgt_cpby;
};

/**
 * Signals in message VCU1Mid3CanFr32.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t lgt_stfn_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cornr_stfn_ub;

    /**
     *  Corner Stiffness Quality
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cornr_stfn_cornr_stfn_qly;

    /**
     *  Corner Stiffness Front
     *
     * Range: 0..1023 (0.0..399609.375 N)
     * Scale: 390.625
     * Offset: 0.0
     */
    uint16_t cornr_stfn_cornr_stfn_frnt;

    /**
     *  Corner Stiffness Rear
     *
     * Range: 0..1023 (0.0..399609.375 N)
     * Scale: 390.625
     * Offset: 0.0
     */
    uint16_t cornr_stfn_cornr_stfn_re;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_batt_limn_ext_ub;

    /**
     * Signal to inform about high voltage battery overheating event.
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_batt_limn_ext;

    /**
     *  Longitudinal stiffness Quality
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t lgt_stfn_lgt_stfn_qly;

    /**
     *  Longitudinal stiffness Front
     *
     * Range: 0..511 (0.0..255.5 Unitless)
     * Scale: 0.5
     * Offset: 0.0
     */
    uint16_t lgt_stfn_lgt_stfn_frnt;

    /**
     *  Longitudinal stiffness Rear
     *
     * Range: 0..511 (0.0..255.5 Unitless)
     * Scale: 0.5
     * Offset: 0.0
     */
    uint16_t lgt_stfn_lgt_stfn_re;
};

/**
 * Signals in message VCU1Mid3CanFr33.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t tire_rd_estimd_at_whls_ub;

    /**
     *  Front Left wheel radius
     *
     * Range: 0..513 (0.25..0.50048764 m)
     * Scale: 0.00048828
     * Offset: 0.25
     */
    uint16_t tire_rd_estimd_at_whls_fr_le;

    /**
     *  Front Right Wheel Radius
     *
     * Range: 0..513 (0.25..0.50048764 m)
     * Scale: 0.00048828
     * Offset: 0.25
     */
    uint16_t tire_rd_estimd_at_whls_fr_ri;

    /**
     *  Rear Left Wheel Radius
     *
     * Range: 0..513 (0.25..0.50048764 m)
     * Scale: 0.00048828
     * Offset: 0.25
     */
    uint16_t tire_rd_estimd_at_whls_re_le;

    /**
     *  Rear Right Wheel radius
     *
     * Range: 0..513 (0.25..0.50048764 m)
     * Scale: 0.00048828
     * Offset: 0.25
     */
    uint16_t tire_rd_estimd_at_whls_re_ri;
};

/**
 * Signals in message VCU1Mid3CanFr34.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_li_hzrd_warn_to_api_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_indcr_to_api_ub;

    /**
     * This signal shows the position of the physical Turn Indicator stalk. Data
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_indcr_to_api_indcr_typ_ext_req;

    /**
     * This signal shows the position of the physical Turn Indicator stalk. Counter
     *
     * Range: 0..3 (0.0..3.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t swt_indcr_to_api_indcr_typ_ext_req_cntr;

    /**
     * This signal shows the position of the physical Turn Indicator stalk. Qf
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_indcr_to_api_indcr_typ_ext_req_to_upd_qf;

    /**
     * This signal shows the position of the physical Turn Indicator stalk. Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t swt_indcr_to_api_indcr_typ_ext_req_chks;

    /**
     * This signal shows if the Hazar Warning Light button is pressed or not.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_li_hzrd_warn_to_api;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_beam_hi_to_api_ub;

    /**
     * This signal reflects the status of the High Beam stalk.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_beam_hi_to_api;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t stand_still_mgr_sts_for_hld_safe_ub;

    /**
     *  Vehicle hold status
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t stand_still_mgr_sts_for_hld_safe_stand_still_sts;

    /**
     *  E2E Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t stand_still_mgr_sts_for_hld_safe_cntr;

    /**
     *  E2E Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t stand_still_mgr_sts_for_hld_safe_chks;
};

/**
 * Signals in message VCU1Mid3CanFr35.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t aplid_swt_extr_li_to_api_ub;

    /**
     *  Counter
     *
     * Range: 0..3 (0.0..3.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t aplid_swt_extr_li_to_api_li_ext_fct_cntr;

    /**
     *  Quality factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t aplid_swt_extr_li_to_api_li_ext_fct_qf;

    /**
     *  Data
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t aplid_swt_extr_li_to_api_li_ext_fct_req1;

    /**
     *  J1850 CRC
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t aplid_swt_extr_li_to_api_li_ext_fct_crc;
};

/**
 * Signals in message VCU1Mid3CanFr36.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t whl_lock_sts_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t a_lgt_max_avl_ub;

    /**
     * Maximum longitudinal acceleration capability Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t a_lgt_max_avl_cntr;

    /**
     * Maximum longitudinal acceleration capability Maximum longitudinal acceleration capability short horizon
     *
     * Range: 0..180 (-3.0..15.0 m/s^2)
     * Scale: 0.1
     * Offset: -3.0
     */
    uint8_t a_lgt_max_avl_a_lgt_max_avl;

    /**
     * Maximum longitudinal acceleration capability Maximum longitudinal deceleration capability
     *
     * Range: 0..150 (0.0..15.0 m/s^2)
     * Scale: 0.1
     * Offset: 0.0
     */
    uint8_t a_lgt_max_avl_decel_lgt_max_avl;

    /**
     * Maximum longitudinal acceleration capability Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t a_lgt_max_avl_chks;

    /**
     * Maximum longitudinal acceleration capability Maximum Longitudinal acceleration capability long horizon
     *
     * Range: 0..180 (-3.0..15.0 m/s^2)
     * Scale: 0.1
     * Offset: -3.0
     */
    uint8_t a_lgt_max_avl_a_lgt_max_avl_long;

    /**
     * Wheel lock and degradation status Wheel lock degradation status
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t whl_lock_sts_degraded_sts;

    /**
     * Wheel lock and degradation status Wheel lock status
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t whl_lock_sts_lock_sts;

    /**
     * Wheel lock and degradation status Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t whl_lock_sts_cntr;

    /**
     * Wheel lock and degradation status Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t whl_lock_sts_chks;
};

/**
 * Signals in message Vcu1Mid3CanNmFr.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_t {
    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_node_id_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_pni_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_aw_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_cs_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_rmr_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_entrance_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t infotainment_and_hmi_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t body_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t visibility_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t warning_sounds_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t hazard_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_locking_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driverinfo_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driverinfo_poll_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pncgsd_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_global_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_trailer_caravan_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driving_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_pre_climatization_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_charging_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_start_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare1_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare2_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare3_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare4_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnchv_energy_storage_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t vehicle_api_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t brake_vcu1;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t diesel_vcu1;
};

/**
 * Signals in message Vcu1ToAllFuncMid3DiagReqFrame.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_t {
    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint64_t vcu1_to_all_func_mid3_diag_req_npdu;
};

/**
 * Signals in message VIMMid3CanFr01.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_t {
    /**
     * High Beam request.
     * This signal shall have the same behaviour as the High Beam stalk.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_beam_hi_from_api;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_sys_actv_req_ext_ub;

    /**
     * Request to activate the high voltage system supply. The request shall be kept TRUE as long as the high voltage supply is needed, and dropped to FALSE when no longer needed. Note that the supply may be kept active even if this request is FALSE.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_sys_actv_req_ext;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_re_cmd_if_ub;

    /**
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_re_cmd_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t win_wshng_cmd_if_ub;

    /**
     * Used for requesting front and rear washing.
     * 
     * 0: Washing Off
     * 1: Windscreen washing request
     * 2: Rear window washing request
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t win_wshng_cmd_if;

    /**
     * Used for either setting the sensitivity of the rain sensor (when activated) or determining wiping pause time (when wiping is in intermittent mode).
     * When Autonomous driving mode is activated rain sensor functionality is automatically set to on and rain sensor sensitivity will be given the highest value (i.e. WipgSpdIntlIf = 7).
     * 
     * 0 equals lowest rain sensor sensitivity setting/longest interval wiping pause time.
     * 7 equals highest rain sensor sensitivity setting/shortest interval wiping pause time
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipg_spd_intl_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipg_spd_intl_if_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t rain_snsr_cmd_if_ub;

    /**
     * Used for activating/deactivating the rain sensor function, i.e. automatic wiping.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t rain_snsr_cmd_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t horn_actvn_req_if_ub;

    /**
     * Horn activating request from the API.
     * 
     * 1 = Off
     * 2 = On
     * 
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t horn_actvn_req_if;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_req_if_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_beam_hi_from_api_ub;

    /**
     * Used for activating cleaning for a specific camera/sensor.
     * 
     * ClngProg = 0-15 pertains to a specific cleaning program, 0 = Off, 1 = default.
     * 
     * 15 = Abort cleaning
     * 
     * SnsrSeld = 0-15 pertains to what camera/sensor is requested to be cleaned. 0 = Off.
     * 
     * 2 = Roof mounted sensor pod
     * 3 = Front looking camera (iron mark)
     * 4 = Rear looking camera
     * 5 = Left side view mirror mounted camera(s)
     * 6 = Right side view mirror mounted camera(s)
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_req_if_clng_prog;

    /**
     * Used for activating cleaning for a specific camera/sensor.
     * 
     * ClngProg = 0-15 pertains to a specific cleaning program, 0 = Off, 1 = default.
     * 
     * 15 = Abort cleaning
     * 
     * SnsrSeld = 0-15 pertains to what camera/sensor is requested to be cleaned. 0 = Off.
     * 
     * 2 = Roof mounted sensor pod
     * 3 = Front looking camera (iron mark)
     * 4 = Rear looking camera
     * 5 = Left side view mirror mounted camera(s)
     * 6 = Right side view mirror mounted camera(s)
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t snsr_clng_req_if_snsr_seld;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_frnt_req_if_ub;

    /**
     * Used for describing different wiping modes  related to wiper stalk position.
     * 
     * 0: Initial value (not used)
     * 1: Wiping off
     * 2: Single stroke
     * 3: Intermittent wiping
     * 4: Continuous low speed wiping
     * 5: Continuous high speed wiping Quality Factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_frnt_req_if_frnt_wipr_lvr_qf;

    /**
     * Used for describing different wiping modes  related to wiper stalk position.
     * 
     * 0: Initial value (not used)
     * 1: Wiping off
     * 2: Single stroke
     * 3: Intermittent wiping
     * 4: Continuous low speed wiping
     * 5: Continuous high speed wiping Counter
     *
     * Range: 0..3 (0.0..3.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t wipr_frnt_req_if_frnt_wipr_lvr_cntr;

    /**
     * Used for describing different wiping modes  related to wiper stalk position.
     * 
     * 0: Initial value (not used)
     * 1: Wiping off
     * 2: Single stroke
     * 3: Intermittent wiping
     * 4: Continuous low speed wiping
     * 5: Continuous high speed wiping Data
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t wipr_frnt_req_if_frnt_wipr_lvr_cmd1;

    /**
     * Used for describing different wiping modes  related to wiper stalk position.
     * 
     * 0: Initial value (not used)
     * 1: Wiping off
     * 2: Single stroke
     * 3: Intermittent wiping
     * 4: Continuous low speed wiping
     * 5: Continuous high speed wiping J1850 CRC
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t wipr_frnt_req_if_frnt_wipr_lvr_crc;
};

/**
 * Signals in message VIMMid3CanFr02.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cnvinc_api_ena_ub;

    /**
     * Signal to provide means for External Client to enable the Convenience API by waking TCAM and request TCAM to set up ethernet communication.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t cnvinc_api_ena;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_open_door_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_cls_door_ub;

    /**
     *  Information whether it is ok to close rear passenger door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_cls_door_ok_to_cls_door_pass_re;

    /**
     *  Information whether it is ok to close passenger door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_cls_door_ok_to_cls_door_pass;

    /**
     *  Information whether it is ok to close rear driver door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_cls_door_ok_to_cls_door_drvr_re;

    /**
     *  Information whether it is ok to close driver door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_cls_door_ok_to_cls_door_drvr;

    /**
     *  Counter for Ok to close doors signals
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ok_to_cls_door_ok_to_cls_door_cntr;

    /**
     *  Checksum for Ok to close door signals
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ok_to_cls_door_ok_to_cls_door_chks;

    /**
     *  Information whether it is ok to open rear passenger door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_open_door_ok_to_open_door_pass_re;

    /**
     *  Information whether it is ok to open passenger door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_open_door_ok_to_open_door_pass;

    /**
     *  Information whether it is ok to open rear driver door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_open_door_ok_to_open_door_drvr_re;

    /**
     *  Information whether it is ok to open driver door
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ok_to_open_door_ok_to_open_door_drvr;

    /**
     *  Counter for Ok to open doors signals
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ok_to_open_door_ok_to_open_door_cntr;

    /**
     *  Checksum for Ok to open door signals
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ok_to_open_door_ok_to_open_door_chks;
};

/**
 * Signals in message VIMMid3CanFr03.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_pass_cls_req_api_ub;

    /**
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_pass_cls_req_api;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_drvr_cls_req_api_ub;

    /**
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_drvr_cls_req_api;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_pass_re_cls_req_api_ub;

    /**
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_pass_re_cls_req_api;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_drvr_re_cls_req_api_ub;

    /**
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t pwr_door_drvr_re_cls_req_api;
};

/**
 * Signals in message VIMMid3CanFr04.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hmi_autnms_sts_ub;

    /**
     * Signal from the Autonomy System to the Vehicle Platform, communicating the current AD Mode Status (Unknown, Off, Ready, Not Ready, On, Fault) of the complete system.
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hmi_autnms_sts_hmi_autnms_sts;

    /**
     * Signal from the Autonomy System to the Vehicle Platform, communicating the current AD Mode Status (Unknown, Off, Ready, Not Ready, On, Fault) of the complete system.
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t hmi_autnms_sts_counter;

    /**
     * Signal from the Autonomy System to the Vehicle Platform, communicating the current AD Mode Status (Unknown, Off, Ready, Not Ready, On, Fault) of the complete system.
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t hmi_autnms_sts_checksum;

    /**
     * External DCDC LV side current.
     *
     * Range: 0..254 (0.0..254.0 A)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t i_dc_dc_avl_lo_side_ext;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t i_dc_dc_avl_lo_side_ext_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t i_dc_dc_avl_max_lo_side_ext_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t u_dc_dc_avl_lo_side_ext_ub;

    /**
     * Maximum LV side current from the External DCDC
     *
     * Range: 0..254 (0.0..254.0 A)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t i_dc_dc_avl_max_lo_side_ext;

    /**
     * External DCDC LV side voltage.
     *
     * Range: 0..250 (0.0..25.0 Volt)
     * Scale: 0.1
     * Offset: 0.0
     */
    uint8_t u_dc_dc_avl_lo_side_ext;
};

/**
 * Signals in message VIMMid3CanFr05.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ext_dc_dc_actvn_sts2_ub;

    /**
     * Status of Uber DCDC ( 2nd DCDC)
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ext_dc_dc_actvn_sts2;
};

/**
 * Signals in message VIMMid3CanFr06.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ext_dc_dc_actvn_sts_ub;

    /**
     * Status of the external 3rd DCDC (Redundant).
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ext_dc_dc_actvn_sts;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_i_dc_dc_hi_side_ext_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t hv_u_dc_dc_hi_side_ext_ub;

    /**
     * The voltage at the DC/DC connecting the vehicle 400V system to the Autonomous drive system. The voltage is measured at the high voltage side of the DC/DC.
     *
     * Range: 0..2044 (0.0..511.0 Volt)
     * Scale: 0.25
     * Offset: 0.0
     */
    uint16_t hv_u_dc_dc_hi_side_ext;

    /**
     * The current at the DC/DC connecting the vehicle 400V system to the Autonomous drive system. The current is measured at the high voltage side of the DC/DC. The value of the current shall be the sum of both DCDCs i.e. 2nd DCDC (Backup) and 3rd DCDC (Redundant).
     *
     * Range: 0..8191 (-410.0..409.1 A)
     * Scale: 0.1
     * Offset: -410.0
     */
    uint16_t hv_i_dc_dc_hi_side_ext;
};

/**
 * Signals in message VIMMid3CanFr07.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_t {
    /**
     * (De-)activation request of autonomous drive mode. Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t autnms_drv_st_req_checksum;

    /**
     * (De-)activation request of autonomous drive mode. Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t autnms_drv_st_req_counter;

    /**
     * (De-)activation request of autonomous drive mode. (De-)activation request of autonomous drive mode.
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_st_req_autnms_drv_st_req;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t autnms_drv_st_req_ub;
};

/**
 * Signals in message VIMMid3CanFr08.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_t {
    /**
     * Request for (de-)activation of vehicle operator mode. Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t veh_oper_st_req_checksum;

    /**
     * Request for (de-)activation of vehicle operator mode. Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t veh_oper_st_req_counter;

    /**
     * Request for (de-)activation of vehicle operator mode. Request for (de-)activation of vehicle operator mode
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_oper_st_req_veh_oper_st_req;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_oper_st_req_ub;
};

/**
 * Signals in message VIMMid3CanFr09.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_usg_st_req_ub;

    /**
     * External Vehicle usage mode request. Comparable to UsageModes
     *
     * Range: 0..15 (0..15 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t veh_usg_st_req;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_stand_still_req_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_dir_req_ub;

    /**
     * AD direction request Desired direction request
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_dir_req_dir_req;

    /**
     * AD direction request Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_dir_req_cntr;

    /**
     * AD direction request Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_dir_req_chks;

    /**
     * AD standstill request Standstill request
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_stand_still_req_req;

    /**
     * AD standstill request Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_stand_still_req_cntr;

    /**
     * AD standstill request Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_stand_still_req_chks;
};

/**
 * Signals in message VIMMid3CanFr10.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_road_gradient_from_ad_ub;

    /**
     * Estimated road gradient, primary channel Banking confidence
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_road_gradient_from_ad_banking_conf;

    /**
     * Estimated road gradient, primary channel Inclination confidence
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t prim_road_gradient_from_ad_incln_conf;

    /**
     * Estimated road gradient, primary channel E2E counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_road_gradient_from_ad_cntr;

    /**
     * Estimated road gradient, primary channel E2E checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t prim_road_gradient_from_ad_chks;

    /**
     * Estimated road gradient, primary channel Road banking
     *
     * Range: -32767.00000000000327675470214..32767.00000000000327675470214 (-0.9999833060000001..0.9999833060000001 rad)
     * Scale: 3.0518e-05
     * Offset: 0.0
     */
    int16_t prim_road_gradient_from_ad_banking;

    /**
     * Estimated road gradient, primary channel Road inclination
     *
     * Range: -32767.00000000000327675470214..32767.00000000000327675470214 (-0.9999833060000001..0.9999833060000001 rad)
     * Scale: 3.0518e-05
     * Offset: 0.0
     */
    int16_t prim_road_gradient_from_ad_incln;
};

/**
 * Signals in message VIMMid3CanFr11.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t adp_li_req_from_api_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_fused_fric_estimn_ub;

    /**
     * Fused friction estimation Friction estimate confidence
     *
     * Range: 0..7 (0..7 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_fused_fric_estimn_fric_estimn_conf;

    /**
     * Fused friction estimation Momentary friction estimate.
     *
     * Range: 0..200 (0.0..2.0 Unitless)
     * Scale: 0.01
     * Offset: 0.0
     */
    uint8_t ad_fused_fric_estimn_fric_estimn;

    /**
     *  Request to activate AHBC functionality in AD mode
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t adp_li_req_from_api_ahbc_actvn;

    /**
     *  Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t adp_li_req_from_api_chks;

    /**
     *  Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t adp_li_req_from_api_cntr;

    /**
     *  Request to activate hazard lights.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t adp_li_req_from_api_hzrd_li_actvn_req;

    /**
     *  Request to deactivate hazard lights.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t adp_li_req_from_api_hzrd_li_deactn_req;

    /**
     *  Request to activate indicator light right.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t adp_li_req_from_api_incr_li_ri_req;

    /**
     *  Request to activate indicator lights left.
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t adp_li_req_from_api_indcr_le_req;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_extr_li_from_api_ub;

    /**
     * This signal shall represent the Light Switch Module (LSM) position. Counter
     *
     * Range: 0..3 (0.0..3.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t swt_extr_li_from_api_li_ext_fct_cntr;

    /**
     * This signal shall represent the Light Switch Module (LSM) position. Quality factor
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_extr_li_from_api_li_ext_fct_qf;

    /**
     * This signal shall represent the Light Switch Module (LSM) position. Data
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t swt_extr_li_from_api_li_ext_fct_req1;

    /**
     * This signal shall represent the Light Switch Module (LSM) position. J1850 CRC
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t swt_extr_li_from_api_li_ext_fct_crc;
};

/**
 * Signals in message VIMMid3CanFr12.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t actvn_of_hndl_door_li_from_api_ub;

    /**
     *  Driver door handle light
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t actvn_of_hndl_door_li_from_api_hndl_door_li_drvr;

    /**
     *  Rear driver door handle light
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_re;

    /**
     *  Passenger door handle light
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t actvn_of_hndl_door_li_from_api_hndl_door_li_pass;

    /**
     *  Rear passenger door handle light
     *
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t actvn_of_hndl_door_li_from_api_hndl_door_li_pass_re;
};

/**
 * Signals in message VIMMid3CanFr13.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_free_dst_ub;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_set_spd_ub;

    /**
     * Set speed for autonomous drive.
     *
     * Range: 0..600 (0.0..60.0 m/s)
     * Scale: 0.1
     * Offset: 0.0
     */
    uint16_t ad_set_spd;

    /**
     *  E2E counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_free_dst_cntr;

    /**
     *  E2E Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_free_dst_chks;

    /**
     *  Free distance in forward direction
     *
     * Range: 0..250 (0.0..5.0 m)
     * Scale: 0.02
     * Offset: 0.0
     */
    uint8_t ad_free_dst_free_dst_fwd;

    /**
     *  Free distance in reverse direction
     *
     * Range: 0..250 (0.0..5.0 m)
     * Scale: 0.02
     * Offset: 0.0
     */
    uint8_t ad_free_dst_free_dst_rvs;

    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_whl_lock_req_ub;

    /**
     * AD request to lock wheels NoReqApplyRel
     *
     * Range: 0..3 (0..3 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_whl_lock_req_no_req_apply_rel;

    /**
     * AD request to lock wheels Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_whl_lock_req_cntr;

    /**
     * AD request to lock wheels Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_whl_lock_req_chks;
};

/**
 * Signals in message VIMMid3CanFr14.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_nom_a_lgt_req_group_safe_ub;

    /**
     * Nominal longitudinal acceleration request Nominal acceleration req from HAD.
     *
     * Range: 0..3840 (-15.0..15.0 m/s^2)
     * Scale: 0.0078125
     * Offset: -15.0
     */
    uint16_t ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_max;

    /**
     * Nominal longitudinal acceleration request E2E Checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_nom_a_lgt_req_group_safe_chks;

    /**
     * Nominal longitudinal acceleration request E2E Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_nom_a_lgt_req_group_safe_cntr;

    /**
     * Nominal longitudinal acceleration request Nominal acceleration req from HAD.
     *
     * Range: 0..3840 (-15.0..15.0 m/s^2)
     * Scale: 0.0078125
     * Offset: -15.0
     */
    uint16_t ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_min;

    /**
     * Nominal longitudinal acceleration request Limit of maximum allowed negative jerk (acceleration rate of change)
     *
     * Range: 0..4000 (-100.0..100.0 m/s^3)
     * Scale: 0.05
     * Offset: -100.0
     */
    uint16_t ad_nom_a_lgt_req_group_safe_neg_lim_for_jerk;

    /**
     * Nominal longitudinal acceleration request Limit of maximum allowed positive jerk (acceleration rate of change)
     *
     * Range: 0..4000 (-100.0..100.0 m/s^3)
     * Scale: 0.05
     * Offset: -100.0
     */
    uint16_t ad_nom_a_lgt_req_group_safe_pos_lim_for_jerk;
};

/**
 * Signals in message VIMMid3CanFr15.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_t {
    /**
     * Range: 0..1 (0..1 -)
     * Scale: 1
     * Offset: 0
     */
    uint8_t ad_prim_a_lgt_lim_req_group_safe_ub;

    /**
     * Safety critical acceleration request from HAD. Safety critical acceleration request from HAD.
     *
     * Range: 0..3840 (-15.0..15.0 m/s^2)
     * Scale: 0.0078125
     * Offset: -15.0
     */
    uint16_t ad_prim_a_lgt_lim_req_group_safe_a_lgt_max_req;

    /**
     * Safety critical acceleration request from HAD. E2E Counter
     *
     * Range: 0..15 (0.0..15.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_prim_a_lgt_lim_req_group_safe_cntr;

    /**
     * Safety critical acceleration request from HAD. Safety critical acceleration request from HAD.
     *
     * Range: 0..3840 (-15.0..15.0 m/s^2)
     * Scale: 0.0078125
     * Offset: -15.0
     */
    uint16_t ad_prim_a_lgt_lim_req_group_safe_a_lgt_min_req;

    /**
     * Safety critical acceleration request from HAD. E2E checksum
     *
     * Range: 0..255 (0.0..255.0 Unitless)
     * Scale: 1.0
     * Offset: 0.0
     */
    uint8_t ad_prim_a_lgt_lim_req_group_safe_chks;
};

/**
 * Signals in message VimMid3CanNmFr.
 *
 * All signal values are as on the CAN bus.
 */
struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_t {
    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_node_id_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_pni_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_aw_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_cs_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t nm_rmr_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_entrance_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t infotainment_and_hmi_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t body_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t visibility_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t warning_sounds_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t hazard_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_locking_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driverinfo_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driverinfo_poll_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pncgsd_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_global_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_trailer_caravan_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_driving_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_pre_climatization_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_charging_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_start_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare1_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare2_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare3_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnc_spare4_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t pnchv_energy_storage_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t vehicle_api_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t brake_vim;

    /**
     * Range: -
     * Scale: 1
     * Offset: 0
     */
    uint8_t diesel_vim;
};

/**
 * Pack message ETCVCU1DevSendMid3Fr1.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_t *src_p,
    size_t size);

/**
 * Unpack message ETCVCU1DevSendMid3Fr1.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr1_vcu1_dev_receive_mid3_fr1_byte1_is_in_range(uint8_t value);

/**
 * Pack message ETCVCU1DevSendMid3Fr2.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_t *src_p,
    size_t size);

/**
 * Unpack message ETCVCU1DevSendMid3Fr2.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr2_vcu1_dev_receive_mid3_fr2_byte5_is_in_range(uint8_t value);

/**
 * Pack message ETCVCU1DevSendMid3Fr3.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_t *src_p,
    size_t size);

/**
 * Unpack message ETCVCU1DevSendMid3Fr3.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr3_vcu1_dev_receive_mid3_fr3_byte6_is_in_range(uint8_t value);

/**
 * Pack message ETCVCU1DevSendMid3Fr4.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_t *src_p,
    size_t size);

/**
 * Unpack message ETCVCU1DevSendMid3Fr4.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr4_vcu1_dev_receive_mid3_fr4_byte7_is_in_range(uint8_t value);

/**
 * Pack message ETCVCU1DevSendMid3Fr5.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_t *src_p,
    size_t size);

/**
 * Unpack message ETCVCU1DevSendMid3Fr5.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__etcvcu1_dev_send_mid3_fr5_vcu1_dev_receive_mid3_fr5_byte2_is_in_range(uint8_t value);

/**
 * Pack message SSMMid3CanFr01.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_t *src_p,
    size_t size);

/**
 * Unpack message SSMMid3CanFr01.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_intv_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_intv_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_intv_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_mod_sts1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_mod_sts1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_veh_oper_mod_sts1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_ad_steer_mod_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_ad_steer_mod_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_ad_steer_mod_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_mod_sts_safe_group_by_gatewy_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_perf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_perf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_ad_steer_perf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr01_ad_sec_steer_sts_safe_group_by_gatewy_chks_is_in_range(uint8_t value);

/**
 * Pack message SSMMid3CanFr02.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_t *src_p,
    size_t size);

/**
 * Unpack message SSMMid3CanFr02.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_platform_safe_stop_actv_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_platform_safe_stop_actv_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_platform_safe_stop_actv_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr02_prim_safe_stop_actv1_chks_is_in_range(uint8_t value);

/**
 * Pack message SSMMid3CanFr07.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_t *src_p,
    size_t size);

/**
 * Unpack message SSMMid3CanFr07.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_mov_dir_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_mov_dir_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_mov_dir_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_min_max_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_min_max_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_min_max_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_max_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_max_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_max_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_mov_dir_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_mov_dir_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_mov_dir_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_min_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_min_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_min_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_nom_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_nom_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_nom_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_nom_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_nom_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr07_prim_veh_spd_group_safe_nom_is_in_range(uint16_t value);

/**
 * Pack message SSMMid3CanFr11.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_t *src_p,
    size_t size);

/**
 * Unpack message SSMMid3CanFr11.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_min_max_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_min_max_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_min_max_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_max_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_max_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_max_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_min_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_min_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_min_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_nom_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_nom_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_nom_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_nom_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_nom_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_fr11_prim_a_lgt_data_raw_safe_nom_is_in_range(uint16_t value);

/**
 * Pack message SsmMid3CanNmFr.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_t *src_p,
    size_t size);

/**
 * Unpack message SsmMid3CanNmFr.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_node_id_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_node_id_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_node_id_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_pni_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_pni_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_pni_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_aw_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_aw_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_aw_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_cs_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_cs_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_cs_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_rmr_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_rmr_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_nm_rmr_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_entrance_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_entrance_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_entrance_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_infotainment_and_hmi_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_infotainment_and_hmi_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_infotainment_and_hmi_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_body_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_body_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_body_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_visibility_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_visibility_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_visibility_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_warning_sounds_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_warning_sounds_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_warning_sounds_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_hazard_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_hazard_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_hazard_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_locking_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_locking_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_locking_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driverinfo_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driverinfo_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driverinfo_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driverinfo_poll_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driverinfo_poll_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driverinfo_poll_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pncgsd_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pncgsd_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pncgsd_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_global_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_global_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_global_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_trailer_caravan_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_trailer_caravan_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_trailer_caravan_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driving_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driving_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_driving_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_pre_climatization_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_pre_climatization_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_pre_climatization_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_charging_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_charging_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_charging_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_start_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_start_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_start_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare1_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare1_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare1_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare2_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare2_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare2_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare3_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare3_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare3_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare4_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare4_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnc_spare4_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnchv_energy_storage_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnchv_energy_storage_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_pnchv_energy_storage_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_vehicle_api_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_vehicle_api_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_vehicle_api_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_brake_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_brake_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_brake_ssm_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_diesel_ssm_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_diesel_ssm_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__ssm_mid3_can_nm_fr_diesel_ssm_is_in_range(uint8_t value);

/**
 * Pack message VCU1DevSendMid3Fr1.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_t *src_p,
    size_t size);

/**
 * Unpack message VCU1DevSendMid3Fr1.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr1_vcu1_dev_send_mid3_fr1_byte0_is_in_range(uint8_t value);

/**
 * Pack message VCU1DevSendMid3Fr2.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_t *src_p,
    size_t size);

/**
 * Unpack message VCU1DevSendMid3Fr2.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr2_vcu1_dev_send_mid3_fr2_byte7_is_in_range(uint8_t value);

/**
 * Pack message VCU1DevSendMid3Fr3.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_t *src_p,
    size_t size);

/**
 * Unpack message VCU1DevSendMid3Fr3.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr3_vcu1_dev_send_mid3_fr3_byte7_is_in_range(uint8_t value);

/**
 * Pack message VCU1DevSendMid3Fr4.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_t *src_p,
    size_t size);

/**
 * Unpack message VCU1DevSendMid3Fr4.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr4_vcu1_dev_send_mid3_fr4_byte0_is_in_range(uint8_t value);

/**
 * Pack message VCU1DevSendMid3Fr5.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_t *src_p,
    size_t size);

/**
 * Unpack message VCU1DevSendMid3Fr5.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte0_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte0_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_dev_send_mid3_fr5_vcu1_dev_send_mid3_fr5_byte3_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr01.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr01.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ad_steer_perf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ad_steer_perf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ad_steer_perf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ad_steer_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ad_steer_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_ad_steer_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_ad_prim_steer_sts_safe_group_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr01_car_mod_in_crash_sts_safe_sts_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr02.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr02.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_actv_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_actv_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_actv_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_swt_sts_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_swt_sts_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_swt_sts_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_swt_sts_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_swt_sts_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_swt_sts_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_grdt_neg_min_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_grdt_neg_min_req_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_grdt_neg_min_req_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_actr_ctrl_mod_for_min_tq_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_actr_ctrl_mod_for_min_tq_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_actr_ctrl_mod_for_min_tq_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_grdt_pos_min_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_grdt_pos_min_req_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_grdt_pos_min_req_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_brk_tq_min_req_brk_tq_min_req_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_actv_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_actv_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_horn_actv_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_wshr_fld_lvl_contns_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_wshr_fld_lvl_contns_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_wshr_fld_lvl_contns_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_wshr_fld_lvl_contns_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_wshr_fld_lvl_contns_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr02_wshr_fld_lvl_contns_if_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr03.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr03.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ad_steer_actvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ad_steer_actvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ad_steer_actvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ad_steer_de_actvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ad_steer_de_actvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_ad_steer_de_actvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_ad_sec_steer_actvn_group_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_steer_whl_tq_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_act_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_act_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr03_prpsn_tq_dir_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr04.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr04.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_req1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_req1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_req1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_crc_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_crc_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_swt_extr_li_to_api_li_ext_fct_crc_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_prpsn_tq_dir_cpby_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr04_fric_estimn_from_veh_dyn_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr05.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr05.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_up_tip_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_up_tip_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_up_tip_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_tip_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_tip_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_tip_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_steer_whl_up_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_steer_whl_up_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_steer_whl_up_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_steer_whl_dwn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_steer_whl_dwn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_steer_whl_dwn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_dwn_tip_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_dwn_tip_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_drvr_gear_shift_man_req_dwn_tip_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_actr3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_rsvd3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_sys_clng_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_sys_clng_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_sys_clng_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_wshr_fld_snsr_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_wshr_fld_snsr_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_snsr_clng_err_if_wshr_fld_snsr_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipr_actv_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipr_actv_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipr_actv_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipr_actv_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipr_actv_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipr_actv_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_win_wipg_aut_cmd_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_win_wipg_aut_cmd_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_win_wipg_aut_cmd_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_win_wipg_aut_cmd_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_win_wipg_aut_cmd_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_win_wipg_aut_cmd_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_nom_trlr_m_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_nom_trlr_m_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_nom_trlr_m_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_veh_m_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipg_frnt_aut_mod_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipg_frnt_aut_mod_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipg_frnt_aut_mod_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipg_frnt_aut_mod_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipg_frnt_aut_mod_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wipg_frnt_aut_mod_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wshng_cyc_actv_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wshng_cyc_actv_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wshng_cyc_actv_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wshng_cyc_actv_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wshng_cyc_actv_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_wshng_cyc_actv_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pass_seat_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pass_seat_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pass_seat_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pass_seat_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pass_seat_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_pass_seat_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_actvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_actvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_actvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_deactvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_deactvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_deactvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr05_ad_sec_blind_stop_mon_actvn_group_safe_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr06.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr06.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint32_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_car_ti_glb_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_car_ti_glb_decode(uint32_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_car_ti_glb_is_in_range(uint32_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_car_ti_glb_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_car_ti_glb_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr06_car_ti_glb_ub_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr08.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr08.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_roll_rate1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_roll_rate1_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_roll_rate1_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_yaw_rate1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_yaw_rate1_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_yaw_rate1_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_roll_rate1_qf1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_roll_rate1_qf1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_roll_rate1_qf1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_yaw_rate1_qf1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_yaw_rate1_qf1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_yaw_rate1_qf1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_ag_data_raw_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_cnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_cnt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_cnt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr08_clstr_sts1_for_autnms_drv_clstr1_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr09.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr09.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_ag_safe_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_ag_safe_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_ag_safe_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_ag_spd_safe_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_ag_spd_safe_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_ag_spd_safe_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_steer_whl_snsr_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_whl_mot_sys_clu_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_whl_mot_sys_clu_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_whl_mot_sys_clu_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_whl_mot_sys_clu_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_whl_mot_sys_clu_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_whl_mot_sys_clu_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_le_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_le_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_le_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_le_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_le_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ri_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ri_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ri_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ri_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_ri_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr09_ad_steer_paddl_psd_group_safe_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr10.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr10.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_drvr_door_posn_sts_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_posn_sts_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_wipr_frnt_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_wipr_frnt_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_wipr_frnt_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_wipr_re_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_wipr_re_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_wipr_re_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_drvr_re_posn_sts_to_api_drvr_re_door_posn_sts_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_door_pass_posn_sts_to_api_pass_door_posn_sts_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_wipr_lvr_sts_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_eng_coolt_indcn_req_for_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_eng_coolt_indcn_req_for_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_eng_coolt_indcn_req_for_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_eng_coolt_indcn_req_for_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_eng_coolt_indcn_req_for_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr10_eng_coolt_indcn_req_for_ext_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr11.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr11.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_pass_re_door_posn_sts_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_posn_sts_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_movmt_fail_notif_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_movmt_fail_notif_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_movmt_fail_notif_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_movmt_fail_notif_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_movmt_fail_notif_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_movmt_fail_notif_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_re_movmt_fail_notif_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_re_movmt_fail_notif_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_re_movmt_fail_notif_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_movmt_fail_notif_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_movmt_fail_notif_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_movmt_fail_notif_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_movmt_fail_notif_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_movmt_fail_notif_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_movmt_fail_notif_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_ahbc_indcn_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_ahbc_indcn_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_ahbc_indcn_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_movmt_fail_notif_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_movmt_fail_notif_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_movmt_fail_notif_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_re_movmt_fail_notif_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_re_movmt_fail_notif_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_drvr_re_movmt_fail_notif_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_ahbc_indcn_to_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_ahbc_indcn_to_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_ahbc_indcn_to_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_movmt_fail_notif_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_movmt_fail_notif_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_door_pass_re_movmt_fail_notif_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_equid_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_equid_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_equid_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_st1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_st1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_st1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_for_blt_lock_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_equid_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_equid_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_equid_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_st1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_st1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_st1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_for_blt_lock_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_row_sec_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_for_blt_lock_st1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_for_blt_lock_st1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_for_blt_lock_st1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_for_blt_lock_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_for_blt_lock_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_for_blt_lock_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_pass_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_for_blt_lock_st1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_for_blt_lock_st1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_for_blt_lock_st1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_for_dev_err_sts2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_for_dev_err_sts2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_for_dev_err_sts2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr11_blt_lock_st_at_drvr_ub_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr12.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr12.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_re_max_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_re_max_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_re_max_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_cnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_cnt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_cnt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_clstr_sts2_for_autnms_drv_clstr2_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_brk_pedl_val_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_brk_pedl_val_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_brk_pedl_val_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_brk_pedl_val_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_brk_pedl_val_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_brk_pedl_val_brk_pedl_val_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_frnt_max_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_frnt_max_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_frnt_max_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_frnt_max_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_frnt_max_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_frnt_max_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_ext_dc_dc_actvn_allwd_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_ext_dc_dc_actvn_allwd_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_ext_dc_dc_actvn_allwd_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_ext_dc_dc_actvn_allwd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_ext_dc_dc_actvn_allwd_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_ext_dc_dc_actvn_allwd_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_re_max_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_re_max_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr12_pt_tq_at_axle_avl_re_max_is_in_range(int16_t value);

/**
 * Pack message VCU1Mid3CanFr13.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr13.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_ad_actvn_ok_from_veh_dyn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_ad_actvn_ok_from_veh_dyn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_ad_actvn_ok_from_veh_dyn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_ad_actvn_ok_from_veh_dyn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_ad_actvn_ok_from_veh_dyn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_ad_actvn_ok_from_veh_dyn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pt_tq_at_axle_avl_re_max_long_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pt_tq_at_axle_avl_re_max_long_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pt_tq_at_axle_avl_re_max_long_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_autnms_drv_mod_sts1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_autnms_drv_mod_sts1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_autnms_drv_mod_sts1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_autnms_low_spd_mod_sts1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_autnms_low_spd_mod_sts1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_autnms_low_spd_mod_sts1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_counter_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_counter_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_counter_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_veh_oper_mod_sts1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_veh_oper_mod_sts1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_veh_oper_mod_sts1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_checksum_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_checksum_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_autnms_drv_mod_mngt_glb_safe1_checksum_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn3_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn3_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn3_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn4_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn4_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn4_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn5_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn5_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn5_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn6_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn6_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn6_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn7_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn7_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn7_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn8_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn8_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn8_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn9_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn9_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn9_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn10_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn10_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn10_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn11_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn11_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn11_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn12_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn12_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn12_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn13_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn13_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn13_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn14_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn14_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn14_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn15_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn15_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn15_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn16_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn16_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn16_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn17_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn17_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn17_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn18_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn18_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn18_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn19_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn19_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn19_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn20_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn20_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn20_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn21_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn21_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn21_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn22_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn22_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn22_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn23_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn23_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn23_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn24_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn24_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn24_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn25_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn25_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn25_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn26_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn26_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn26_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn27_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn27_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_eng_flt_indcn_eng_flt_indcn27_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pt_tq_at_axle_avl_re_max_long_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pt_tq_at_axle_avl_re_max_long_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr13_pt_tq_at_axle_avl_re_max_long_is_in_range(int16_t value);

/**
 * Pack message VCU1Mid3CanFr14.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr14.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_srv_rqrd_for_cllsn_aid_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_srv_rqrd_for_cllsn_aid_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_srv_rqrd_for_cllsn_aid_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_disp1_wd_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_disp1_wd_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_disp1_wd_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_disp1_wd_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_disp1_wd_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_disp1_wd_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_t_in_dt_elec_for_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_t_in_dt_elec_for_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_t_in_dt_elec_for_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_flow_in_dt_elec_for_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_flow_in_dt_elec_for_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_flow_in_dt_elec_for_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_flow_in_dt_elec_for_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_flow_in_dt_elec_for_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_flow_in_dt_elec_for_ext_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cncl_req_for_crs_ctrl_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cncl_req_for_crs_ctrl_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cncl_req_for_crs_ctrl_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cncl_req_for_crs_ctrl_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cncl_req_for_crs_ctrl_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cncl_req_for_crs_ctrl_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_srv_rqrd_for_cllsn_aid_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_srv_rqrd_for_cllsn_aid_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_srv_rqrd_for_cllsn_aid_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_t_in_dt_elec_for_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_t_in_dt_elec_for_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_coolt_t_in_dt_elec_for_ext_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_threat_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_threat_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_threat_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_pen_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_pen_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_aid_snvty_seld_pen_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_threat_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_threat_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_threat_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_fwd_warn_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_fwd_warn_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_fwd_warn_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_fwd_warn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_fwd_warn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_cllsn_fwd_warn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_turn_sts1_wd_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_turn_sts1_wd_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_turn_sts1_wd_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_turn_sts1_wd_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_turn_sts1_wd_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr14_indcr_turn_sts1_wd_sts_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr15.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr15.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_qly_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_qly_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_qly_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_equid_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_equid_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_equid_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_st1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_st1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_st1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_blt_lock_st_at_row_sec_mid_for_blt_lock_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_dir_indcn_failr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_dir_indcn_failr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_dir_indcn_failr_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_dir_indcn_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_dir_indcn_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_dir_indcn_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_brk_li_failr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_brk_li_failr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_brk_li_failr_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_brk_li_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_brk_li_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_sys_brk_li_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_beam_hi_indcn_disp_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_beam_hi_indcn_disp_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_beam_hi_indcn_disp_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_beam_hi_indcn_disp_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_beam_hi_indcn_disp_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_beam_hi_indcn_disp_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_tire_rd_estimd_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_hi_mntd_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_hi_mntd_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_hi_mntd_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_hi_mntd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_hi_mntd_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_hi_mntd_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_le_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_le_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_ri_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_brk_li_ri_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_frnt_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_frnt_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_frnt_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_frnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_frnt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_frnt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_re_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_re_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_re_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_le_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_frnt_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_frnt_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_frnt_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_frnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_frnt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_frnt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_re_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_re_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_re_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_indcr_turn_ri_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_le_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_le_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_ri_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_li_posn_frnt_ri_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_fog_li_frnt_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_fog_li_frnt_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_fog_li_frnt_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_fog_li_frnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_fog_li_frnt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_fog_li_frnt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_le_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_le_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_ri_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_hi_ri_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_le_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_le_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_ri_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_beam_lo_ri_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_le_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_le_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_ri_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_posn_re_ri_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_plate_nr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_plate_nr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_plate_nr_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_plate_nr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_plate_nr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_of_plate_nr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_li_rvsg_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_li_rvsg_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_li_rvsg_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_li_rvsg_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_li_rvsg_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_flt_li_rvsg_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_hdlamp_sys_failr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_hdlamp_sys_failr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_hdlamp_sys_failr_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_hdlamp_sys_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_hdlamp_sys_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr15_hdlamp_sys_failr_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr16.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr16.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_prpsn_err_indcn_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_prpsn_err_indcn_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_prpsn_err_indcn_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_eng_oil_p_warn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_eng_oil_p_warn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_eng_oil_p_warn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_eng_oil_p_warn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_eng_oil_p_warn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_eng_oil_p_warn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff0_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff0_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff0_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff1_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff1_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff2_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_road_load_nom_coeff2_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_trsm_flt_indcn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_trsm_flt_indcn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_trsm_flt_indcn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_trsm_flt_indcn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_trsm_flt_indcn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_trsm_flt_indcn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_prpsn_err_indcn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_prpsn_err_indcn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_prpsn_err_indcn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_asy_sfty_decel_enad_by_veh_dyn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_asy_sfty_decel_enad_by_veh_dyn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_asy_sfty_decel_enad_by_veh_dyn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_asy_sfty_decel_enad_by_veh_dyn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_asy_sfty_decel_enad_by_veh_dyn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_asy_sfty_decel_enad_by_veh_dyn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_inhb_of_asy_sfty_decel_by_veh_dyn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_inhb_of_asy_sfty_decel_by_veh_dyn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_inhb_of_asy_sfty_decel_by_veh_dyn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_inhb_of_asy_sfty_decel_by_veh_dyn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_inhb_of_asy_sfty_decel_by_veh_dyn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_inhb_of_asy_sfty_decel_by_veh_dyn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_tank_flap_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_tank_flap_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_tank_flap_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_tank_flap_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_tank_flap_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr16_tank_flap_sts_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr17.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr17.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_eng_oil_lvl_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_eng_oil_lvl_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_eng_oil_lvl_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_eng_oil_lvl_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_eng_oil_lvl_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_eng_oil_lvl_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_tr_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_tr_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_tr_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_hood_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_hood_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_hood_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_sts1_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_sts1_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_sts1_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_soundr_batt_backed_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_soundr_batt_backed_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_soundr_batt_backed_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_intr_scanr_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_intr_scanr_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_intr_scanr_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_incln_failr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_incln_failr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_snsr_incln_failr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_trg_src_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_trg_src_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_trg_src_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_st_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_st_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_alrm_st_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_re_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_re_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_re_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_re_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_re_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_re_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_re_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_re_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_drvr_re_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_re_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_re_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_re_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_door_pass_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_hood_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_hood_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_hood_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_tr_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_tr_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_tr_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_sec2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_sec2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_sec2_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr17_a_lnch_ti_dly3_ub_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr18.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr18.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_accr_pedl_psd_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_accr_pedl_psd_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_safe_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_safe_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_safe_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_asy_sfty_brk_dly_estimd_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_asy_sfty_brk_dly_estimd_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_asy_sfty_brk_dly_estimd_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_asy_sfty_brk_dly_estimd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_asy_sfty_brk_dly_estimd_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_asy_sfty_brk_dly_estimd_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_not_psd_safe_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_not_psd_safe_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_not_psd_safe_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_brk_pedl_psd_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_hv_sys_actv_sts_ext1_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_hv_sys_actv_sts_ext1_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_hv_sys_actv_sts_ext1_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_hv_sys_actv_sts_ext1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_hv_sys_actv_sts_ext1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_hv_sys_actv_sts_ext1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr18_ovrd_decel_by_drvr_ovrd_decel_by_drvr_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr19.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr19.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_accr_pedl_rat_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_accr_pedl_rat_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_accr_pedl_rat_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_accr_pedl_rat_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_accr_pedl_rat_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_accr_pedl_rat_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_drvr_decel_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_drvr_decel_req_decode(int8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_drvr_decel_req_is_in_range(int8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_chrgn_u_req_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_chrgn_u_req_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_chrgn_u_req_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_drvr_decel_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_drvr_decel_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_drvr_decel_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pt_gear_act_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pt_gear_act_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pt_gear_act_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pt_gear_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pt_gear_act_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_pt_gear_act_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_tire_p_warn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_tire_p_warn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_tire_p_warn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_tire_p_warn_type_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_tire_p_warn_type_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_frnt_ri_tire_p_warn_type_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_tire_p_warn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_tire_p_warn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_tire_p_warn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_tire_p_warn_type_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_tire_p_warn_type_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_le_tire_p_warn_type_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_tire_p_warn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_tire_p_warn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_tire_p_warn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_tire_p_warn_type_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_tire_p_warn_type_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_tire_p_warn_re_ri_tire_p_warn_type_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_chrgn_u_req_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_chrgn_u_req_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr19_chrgn_u_req_ext_ub_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr20.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr20.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_act_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_act_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_act_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whls_frnt_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whls_frnt_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whls_frnt_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_ri_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_ri_act_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_ri_act_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_le_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_le_act_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_whl_frnt_le_act_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_axle_frnt_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_axle_frnt_act_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr20_pt_tq_at_axle_frnt_act_is_in_range(int16_t value);

/**
 * Pack message VCU1Mid3CanFr21.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr21.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_act_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_act_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_act_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whls_re_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whls_re_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whls_re_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_ri_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_ri_act_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_ri_act_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_le_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_le_act_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_whl_re_le_act_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_axle_re_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_axle_re_act_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr21_pt_tq_at_axle_re_act_is_in_range(int16_t value);

/**
 * Pack message VCU1Mid3CanFr22.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr22.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pt_tq_at_axle_avl_frnt_max_long_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pt_tq_at_axle_avl_frnt_max_long_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pt_tq_at_axle_avl_frnt_max_long_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_brk_fric_tq_tot_at_whls_act_brk_fric_tq_tot_at_whls_act_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pt_tq_at_axle_avl_frnt_max_long_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pt_tq_at_axle_avl_frnt_max_long_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_pt_tq_at_axle_avl_frnt_max_long_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_actvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_actvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_actvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_deactvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_deactvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_deactvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr22_ad_sec_brk_actvn_group_safe_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr23.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr23.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_mon_sys_flt_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_mon_sys_flt_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_mon_sys_flt_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_mon_sys_flt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_mon_sys_flt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_mon_sys_flt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tire_p_posn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tire_p_posn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tire_p_posn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tire_pabslt_val_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tire_pabslt_val_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tire_pabslt_val_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tirepabslt_val1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tirepabslt_val1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_le_tirepabslt_val1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_posn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_posn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_posn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_abslt_val_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_abslt_val_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_abslt_val_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_abslt_val1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_abslt_val1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_frnt_ri_tire_p_abslt_val1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_tire_p_warn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_tire_p_warn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_tire_p_warn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_tire_p_warn_type_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_tire_p_warn_type_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_cmn_tire_p_warn_type_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_posn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_posn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_posn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_abslt_val_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_abslt_val_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_abslt_val_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_abslt_val1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_abslt_val1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_le_tire_p_abslt_val1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_tire_p_warn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_tire_p_warn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_tire_p_warn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_tire_p_warn_type_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_tire_p_warn_type_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_warn_frnt_le_tire_p_warn_type_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_posn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_posn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_posn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_abslt_val_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_abslt_val_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_abslt_val_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_abslt_val1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_abslt_val1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr23_tire_p_val_re_ri_tire_p_abslt_val1_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr24.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr24.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_steer_mot_tq_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_steer_mot_tq_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_steer_mot_tq_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_steer_mot_tq_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_steer_mot_tq_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_steer_mot_tq_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr24_prim_steer_mot_tq_ub_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr25.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr25.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_sts_drvr_prsnt_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_sts_drvr_prsnt_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_sts_drvr_prsnt_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_sts_drvr_prsnt_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_sts_drvr_prsnt_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_sts_drvr_prsnt_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_group_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_group_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_prsnt_group_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_dcha_tot_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_dcha_tot_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_dcha_tot_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_chrg_tot_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_chrg_tot_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_chrg_tot_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_chrg_tot_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_chrg_tot_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_chrg_tot_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_steering_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_steering_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_steering_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_brk_pedl_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_brk_pedl_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_brk_pedl_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_accr_pedl_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_accr_pedl_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_drvr_intv_sts_drvr_intv_by_accr_pedl_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_dcha_tot_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_dcha_tot_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr25_egy_avl_dcha_tot_is_in_range(uint16_t value);

/**
 * Pack message VCU1Mid3CanFr28.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr28.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_asy_sfty_decel_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_asy_sfty_decel_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_asy_sfty_decel_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_asy_sfty_ena_decel_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_asy_sfty_ena_decel_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_asy_sfty_ena_decel_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr28_sfty_decel_group_safe_ub_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr29.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr29.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgr_hndl_sts_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgr_hndl_sts_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgr_hndl_sts_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgr_hndl_sts_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgr_hndl_sts_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgr_hndl_sts_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_chrgn_ti_estimd_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_chrgn_ti_estimd_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_chrgn_ti_estimd_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_chrgn_ti_estimd_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_chrgn_ti_estimd_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_chrgn_ti_estimd_ext_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgn_typ_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgn_typ_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgn_typ_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgn_typ_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgn_typ_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_chrgn_typ_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_u_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_u_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_u_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_i_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_i_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_i_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_i_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_i_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_i_ext_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_u_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_u_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr29_batt_u_ext_is_in_range(uint16_t value);

/**
 * Pack message VCU1Mid3CanFr30.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr30.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_usg_st_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_usg_st_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_usg_st_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_sts_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_brk_degraded_sts_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_usg_st_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_usg_st_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_usg_st_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_man_deactvn_req_in_progs1_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_man_deactvn_req_in_progs1_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_man_deactvn_req_in_progs1_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_man_deactvn_req_in_progs1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_man_deactvn_req_in_progs1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_veh_man_deactvn_req_in_progs1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_checksum_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_checksum_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_checksum_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_counter_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_counter_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_counter_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_autnms_drv_mod_sts1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_autnms_drv_mod_sts1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_autnms_drv_mod_sts1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_veh_oper_mod_sts1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_veh_oper_mod_sts1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr30_autnms_drv_mod_mngt_ext_safe_veh_oper_mod_sts1_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr31.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr31.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_estimd_coast_a_lgt_cpby_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_estimd_coast_a_lgt_cpby_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_estimd_coast_a_lgt_cpby_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_veh_op_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_veh_op_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_veh_op_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_veh_op_req_in_veh_dyn_group_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_estimd_coast_a_lgt_cpby_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_estimd_coast_a_lgt_cpby_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr31_estimd_coast_a_lgt_cpby_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr32.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr32.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_frnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_frnt_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_frnt_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_re_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_cornr_stfn_cornr_stfn_re_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_hv_batt_limn_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_hv_batt_limn_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_hv_batt_limn_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_hv_batt_limn_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_hv_batt_limn_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_hv_batt_limn_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_qly_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_qly_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_qly_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_frnt_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_frnt_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_frnt_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_re_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr32_lgt_stfn_lgt_stfn_re_is_in_range(uint16_t value);

/**
 * Pack message VCU1Mid3CanFr33.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr33.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_fr_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_fr_le_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_fr_le_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_fr_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_fr_ri_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_fr_ri_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_re_le_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_re_le_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_re_le_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_re_ri_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_re_ri_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr33_tire_rd_estimd_at_whls_re_ri_is_in_range(uint16_t value);

/**
 * Pack message VCU1Mid3CanFr34.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr34.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_li_hzrd_warn_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_li_hzrd_warn_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_li_hzrd_warn_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_to_upd_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_to_upd_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_to_upd_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_indcr_to_api_indcr_typ_ext_req_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_li_hzrd_warn_to_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_li_hzrd_warn_to_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_li_hzrd_warn_to_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_beam_hi_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_beam_hi_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_beam_hi_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_beam_hi_to_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_beam_hi_to_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_swt_beam_hi_to_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_stand_still_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_stand_still_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_stand_still_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr34_stand_still_mgr_sts_for_hld_safe_chks_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr35.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr35.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_req1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_req1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_req1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_crc_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_crc_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr35_aplid_swt_extr_li_to_api_li_ext_fct_crc_is_in_range(uint8_t value);

/**
 * Pack message VCU1Mid3CanFr36.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_t *src_p,
    size_t size);

/**
 * Unpack message VCU1Mid3CanFr36.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_a_lgt_max_avl_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_a_lgt_max_avl_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_a_lgt_max_avl_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_decel_lgt_max_avl_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_decel_lgt_max_avl_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_decel_lgt_max_avl_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_a_lgt_max_avl_long_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_a_lgt_max_avl_long_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_a_lgt_max_avl_a_lgt_max_avl_long_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_degraded_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_degraded_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_degraded_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_lock_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_lock_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_lock_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_fr36_whl_lock_sts_chks_is_in_range(uint8_t value);

/**
 * Pack message Vcu1Mid3CanNmFr.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_t *src_p,
    size_t size);

/**
 * Unpack message Vcu1Mid3CanNmFr.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_node_id_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_node_id_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_node_id_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_pni_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_pni_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_pni_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_aw_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_aw_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_aw_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_cs_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_cs_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_cs_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_rmr_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_rmr_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_nm_rmr_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_entrance_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_entrance_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_entrance_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_infotainment_and_hmi_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_infotainment_and_hmi_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_infotainment_and_hmi_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_body_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_body_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_body_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_visibility_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_visibility_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_visibility_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_warning_sounds_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_warning_sounds_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_warning_sounds_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_hazard_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_hazard_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_hazard_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_locking_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_locking_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_locking_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driverinfo_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driverinfo_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driverinfo_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driverinfo_poll_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driverinfo_poll_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driverinfo_poll_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pncgsd_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pncgsd_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pncgsd_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_global_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_global_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_global_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_trailer_caravan_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_trailer_caravan_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_trailer_caravan_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driving_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driving_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_driving_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_pre_climatization_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_pre_climatization_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_pre_climatization_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_charging_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_charging_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_charging_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_start_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_start_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_start_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare1_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare1_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare1_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare2_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare2_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare2_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare3_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare3_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare3_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare4_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare4_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnc_spare4_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnchv_energy_storage_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnchv_energy_storage_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_pnchv_energy_storage_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_vehicle_api_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_vehicle_api_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_vehicle_api_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_brake_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_brake_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_brake_vcu1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_diesel_vcu1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_diesel_vcu1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_mid3_can_nm_fr_diesel_vcu1_is_in_range(uint8_t value);

/**
 * Pack message Vcu1ToAllFuncMid3DiagReqFrame.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_t *src_p,
    size_t size);

/**
 * Unpack message Vcu1ToAllFuncMid3DiagReqFrame.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint64_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_vcu1_to_all_func_mid3_diag_req_npdu_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_vcu1_to_all_func_mid3_diag_req_npdu_decode(uint64_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vcu1_to_all_func_mid3_diag_req_frame_vcu1_to_all_func_mid3_diag_req_npdu_is_in_range(uint64_t value);

/**
 * Pack message VIMMid3CanFr01.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr01.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_swt_beam_hi_from_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_swt_beam_hi_from_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_swt_beam_hi_from_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_hv_sys_actv_req_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_hv_sys_actv_req_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_hv_sys_actv_req_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_hv_sys_actv_req_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_hv_sys_actv_req_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_hv_sys_actv_req_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_re_cmd_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_re_cmd_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_re_cmd_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_re_cmd_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_re_cmd_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_re_cmd_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_win_wshng_cmd_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_win_wshng_cmd_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_win_wshng_cmd_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_win_wshng_cmd_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_win_wshng_cmd_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_win_wshng_cmd_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipg_spd_intl_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipg_spd_intl_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipg_spd_intl_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipg_spd_intl_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipg_spd_intl_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipg_spd_intl_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_rain_snsr_cmd_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_rain_snsr_cmd_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_rain_snsr_cmd_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_rain_snsr_cmd_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_rain_snsr_cmd_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_rain_snsr_cmd_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_horn_actvn_req_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_horn_actvn_req_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_horn_actvn_req_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_horn_actvn_req_if_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_horn_actvn_req_if_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_horn_actvn_req_if_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_swt_beam_hi_from_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_swt_beam_hi_from_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_swt_beam_hi_from_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_clng_prog_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_clng_prog_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_clng_prog_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_snsr_seld_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_snsr_seld_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_snsr_clng_req_if_snsr_seld_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_cmd1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_cmd1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_cmd1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_crc_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_crc_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr01_wipr_frnt_req_if_frnt_wipr_lvr_crc_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr02.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr02.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_cnvinc_api_ena_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_cnvinc_api_ena_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_cnvinc_api_ena_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_cnvinc_api_ena_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_cnvinc_api_ena_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_cnvinc_api_ena_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_pass_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_pass_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_pass_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_pass_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_pass_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_pass_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_drvr_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_drvr_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_drvr_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_drvr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_drvr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_drvr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_cls_door_ok_to_cls_door_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_pass_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_pass_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_pass_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_pass_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_pass_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_pass_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_drvr_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_drvr_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_drvr_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_drvr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_drvr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_drvr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr02_ok_to_open_door_ok_to_open_door_chks_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr03.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr03.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_cls_req_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_cls_req_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_cls_req_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_cls_req_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_cls_req_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_cls_req_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_cls_req_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_cls_req_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_cls_req_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_cls_req_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_cls_req_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_cls_req_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_re_cls_req_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_re_cls_req_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_re_cls_req_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_re_cls_req_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_re_cls_req_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_pass_re_cls_req_api_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_re_cls_req_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_re_cls_req_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_re_cls_req_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_re_cls_req_api_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_re_cls_req_api_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr03_pwr_door_drvr_re_cls_req_api_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr04.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr04.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_hmi_autnms_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_hmi_autnms_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_hmi_autnms_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_counter_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_counter_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_counter_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_checksum_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_checksum_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_hmi_autnms_sts_checksum_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_lo_side_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_lo_side_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_lo_side_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_lo_side_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_lo_side_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_lo_side_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_max_lo_side_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_max_lo_side_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_max_lo_side_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_u_dc_dc_avl_lo_side_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_u_dc_dc_avl_lo_side_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_u_dc_dc_avl_lo_side_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_max_lo_side_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_max_lo_side_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_i_dc_dc_avl_max_lo_side_ext_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_u_dc_dc_avl_lo_side_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_u_dc_dc_avl_lo_side_ext_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr04_u_dc_dc_avl_lo_side_ext_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr05.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr05.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_ext_dc_dc_actvn_sts2_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_ext_dc_dc_actvn_sts2_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_ext_dc_dc_actvn_sts2_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_ext_dc_dc_actvn_sts2_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_ext_dc_dc_actvn_sts2_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr05_ext_dc_dc_actvn_sts2_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr06.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr06.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_ext_dc_dc_actvn_sts_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_ext_dc_dc_actvn_sts_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_ext_dc_dc_actvn_sts_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_ext_dc_dc_actvn_sts_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_ext_dc_dc_actvn_sts_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_ext_dc_dc_actvn_sts_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_i_dc_dc_hi_side_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_i_dc_dc_hi_side_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_i_dc_dc_hi_side_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_u_dc_dc_hi_side_ext_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_u_dc_dc_hi_side_ext_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_u_dc_dc_hi_side_ext_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_u_dc_dc_hi_side_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_u_dc_dc_hi_side_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_u_dc_dc_hi_side_ext_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_i_dc_dc_hi_side_ext_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_i_dc_dc_hi_side_ext_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr06_hv_i_dc_dc_hi_side_ext_is_in_range(uint16_t value);

/**
 * Pack message VIMMid3CanFr07.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr07.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_checksum_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_checksum_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_checksum_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_counter_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_counter_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_counter_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_autnms_drv_st_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_autnms_drv_st_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_autnms_drv_st_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr07_autnms_drv_st_req_ub_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr08.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr08.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_checksum_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_checksum_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_checksum_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_counter_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_counter_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_counter_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_veh_oper_st_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_veh_oper_st_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_veh_oper_st_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr08_veh_oper_st_req_ub_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr09.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr09.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_veh_usg_st_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_veh_usg_st_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_veh_usg_st_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_veh_usg_st_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_veh_usg_st_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_veh_usg_st_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_dir_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_dir_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_dir_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_dir_req_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr09_ad_stand_still_req_chks_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr10.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr10.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_banking_conf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_banking_conf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_banking_conf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_incln_conf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_incln_conf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_incln_conf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_banking_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_banking_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_banking_is_in_range(int16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
int16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_incln_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_incln_decode(int16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr10_prim_road_gradient_from_ad_incln_is_in_range(int16_t value);

/**
 * Pack message VIMMid3CanFr11.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr11.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_fric_estimn_conf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_fric_estimn_conf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_fric_estimn_conf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_fric_estimn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_fric_estimn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_ad_fused_fric_estimn_fric_estimn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_ahbc_actvn_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_ahbc_actvn_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_ahbc_actvn_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_hzrd_li_actvn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_hzrd_li_actvn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_hzrd_li_actvn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_hzrd_li_deactn_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_hzrd_li_deactn_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_hzrd_li_deactn_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_incr_li_ri_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_incr_li_ri_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_incr_li_ri_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_indcr_le_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_indcr_le_req_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_adp_li_req_from_api_indcr_le_req_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_qf_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_qf_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_qf_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_req1_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_req1_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_req1_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_crc_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_crc_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr11_swt_extr_li_from_api_li_ext_fct_crc_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr12.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr12.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_drvr_re_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_pass_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_pass_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_pass_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_pass_re_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_pass_re_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr12_actvn_of_hndl_door_li_from_api_hndl_door_li_pass_re_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr13.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr13.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_set_spd_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_set_spd_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_set_spd_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_set_spd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_set_spd_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_set_spd_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_free_dst_fwd_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_free_dst_fwd_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_free_dst_fwd_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_free_dst_rvs_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_free_dst_rvs_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_free_dst_free_dst_rvs_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_no_req_apply_rel_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_no_req_apply_rel_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_no_req_apply_rel_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr13_ad_whl_lock_req_chks_is_in_range(uint8_t value);

/**
 * Pack message VIMMid3CanFr14.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr14.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_max_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_max_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_max_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_chks_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_min_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_min_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_a_lgt_nom_req_min_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_neg_lim_for_jerk_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_neg_lim_for_jerk_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_neg_lim_for_jerk_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_pos_lim_for_jerk_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_pos_lim_for_jerk_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr14_ad_nom_a_lgt_req_group_safe_pos_lim_for_jerk_is_in_range(uint16_t value);

/**
 * Pack message VIMMid3CanFr15.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_t *src_p,
    size_t size);

/**
 * Unpack message VIMMid3CanFr15.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_ub_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_ub_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_ub_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_a_lgt_max_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_a_lgt_max_req_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_a_lgt_max_req_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_cntr_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_cntr_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_cntr_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint16_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_a_lgt_min_req_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_a_lgt_min_req_decode(uint16_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_a_lgt_min_req_is_in_range(uint16_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_chks_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_chks_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_fr15_ad_prim_a_lgt_lim_req_group_safe_chks_is_in_range(uint8_t value);

/**
 * Pack message VimMid3CanNmFr.
 *
 * @param[out] dst_p Buffer to pack the message into.
 * @param[in] src_p Data to pack.
 * @param[in] size Size of dst_p.
 *
 * @return Size of packed data, or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pack(
    uint8_t *dst_p,
    const struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_t *src_p,
    size_t size);

/**
 * Unpack message VimMid3CanNmFr.
 *
 * @param[out] dst_p Object to unpack the message into.
 * @param[in] src_p Message to unpack.
 * @param[in] size Size of src_p.
 *
 * @return zero(0) or negative error code.
 */
int spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_unpack(
    struct spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_t *dst_p,
    const uint8_t *src_p,
    size_t size);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_node_id_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_node_id_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_node_id_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_pni_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_pni_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_pni_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_aw_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_aw_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_aw_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_cs_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_cs_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_cs_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_rmr_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_rmr_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_nm_rmr_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_entrance_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_entrance_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_entrance_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_infotainment_and_hmi_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_infotainment_and_hmi_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_infotainment_and_hmi_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_body_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_body_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_body_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_visibility_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_visibility_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_visibility_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_warning_sounds_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_warning_sounds_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_warning_sounds_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_hazard_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_hazard_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_hazard_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_locking_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_locking_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_locking_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driverinfo_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driverinfo_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driverinfo_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driverinfo_poll_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driverinfo_poll_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driverinfo_poll_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pncgsd_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pncgsd_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pncgsd_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_global_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_global_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_global_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_trailer_caravan_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_trailer_caravan_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_trailer_caravan_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driving_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driving_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_driving_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_pre_climatization_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_pre_climatization_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_pre_climatization_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_charging_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_charging_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_charging_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_start_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_start_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_start_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare1_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare1_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare1_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare2_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare2_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare2_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare3_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare3_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare3_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare4_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare4_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnc_spare4_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnchv_energy_storage_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnchv_energy_storage_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_pnchv_energy_storage_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_vehicle_api_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_vehicle_api_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_vehicle_api_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_brake_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_brake_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_brake_vim_is_in_range(uint8_t value);

/**
 * Encode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to encode.
 *
 * @return Encoded signal.
 */
uint8_t spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_diesel_vim_encode(double value);

/**
 * Decode given signal by applying scaling and offset.
 *
 * @param[in] value Signal to decode.
 *
 * @return Decoded signal.
 */
double spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_diesel_vim_decode(uint8_t value);

/**
 * Check that given signal is in allowed range.
 *
 * @param[in] value Signal to check.
 *
 * @return true if in range, false otherwise.
 */
bool spa4710_configurations_spa3_ad_mid3_can_cfg_210226__vim_mid3_can_nm_fr_diesel_vim_is_in_range(uint8_t value);


#ifdef __cplusplus
}
#endif

#endif
